---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.4
  name: rdskafkas.middleware.alauda.io
spec:
  group: middleware.alauda.io
  names:
    kind: RdsKafka
    listKind: RdsKafkaList
    plural: rdskafkas
    singular: rdskafka
  scope: Namespaced
  versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: RdsKafka is the Schema for the rdskafkas API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: RdsKafkaSpec defines the desired state of RdsKafka
              properties:
                config:
                  additionalProperties:
                    type: string
                  description: Custom configuration properties
                  type: object
                controller:
                  description: Controller configuration for KRaft mode
                  properties:
                    jvmOptions:
                      description: JVM options such as Xms and Xmx for Kafka brokers.
                      properties:
                        -Xms:
                          description: The Xms field sets the JVM min heap size parameter
                          type: string
                        -Xmx:
                          description: The Xmx field sets the JVM max heap size parameter
                          type: string
                      type: object
                    replicas:
                      default: 3
                      description: Replicas of KRaft controllers
                      format: int32
                      minimum: 1
                      type: integer
                    resources:
                      description: Resource requirements for controller pods
                      properties:
                        claims:
                          description: |-
                            Claims lists the names of resources, defined in spec.resourceClaims,
                            that are used by this container.
                            
                            This is an alpha field and requires enabling the
                            DynamicResourceAllocation feature gate.
                            
                            This field is immutable. It can only be set for containers.
                          items:
                            description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                            properties:
                              name:
                                description: |-
                                  Name must match the name of one entry in pod.spec.resourceClaims of
                                  the Pod where this field is used. It makes that resource available
                                  inside a container.
                                type: string
                              request:
                                description: |-
                                  Request is the name chosen for a request in the referenced claim.
                                  If empty, everything from the claim is made available, otherwise
                                  only the result of this request.
                                type: string
                            required:
                              - name
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                            - name
                          x-kubernetes-list-type: map
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: |-
                            Limits describes the maximum amount of compute resources allowed.
                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: |-
                            Requests describes the minimum amount of compute resources required.
                            If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                            otherwise to an implementation-defined value. Requests cannot exceed Limits.
                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                      type: object
                    roles:
                      description: Roles assigned to controller nodes
                      items:
                        type: string
                      type: array
                    storage:
                      description: Storage configuration for controller data
                      properties:
                        class:
                          type: string
                        deleteClaim:
                          type: boolean
                        size:
                          anyOf:
                            - type: integer
                            - type: string
                          description: The name of the StorageClass to claim a PersistentVolume
                            from.
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                      required:
                        - class
                        - size
                      type: object
                    template:
                      description: Pod template for brokers
                      properties:
                        pod:
                          description: |-
                            Pod template for containers in the pod.
                            Contains security context, affinity and tolerations settings.
                          properties:
                            affinity:
                              description: Affinity and anti-affinity rules for pod
                                scheduling.
                              properties:
                                nodeAffinity:
                                  description: Describes node affinity scheduling rules
                                    for the pod.
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      description: |-
                                        The scheduler will prefer to schedule pods to nodes that satisfy
                                        the affinity expressions specified by this field, but it may choose
                                        a node that violates one or more of the expressions. The node that is
                                        most preferred is the one with the greatest sum of weights, i.e.
                                        for each node that meets all of the scheduling requirements (resource
                                        request, requiredDuringScheduling affinity expressions, etc.),
                                        compute a sum by iterating through the elements of this field and adding
                                        "weight" to the sum if the node matches the corresponding matchExpressions; the
                                        node(s) with the highest sum are the most preferred.
                                      items:
                                        description: |-
                                          An empty preferred scheduling term matches all objects with implicit weight 0
                                          (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                                        properties:
                                          preference:
                                            description: A node selector term, associated
                                              with the corresponding weight.
                                            properties:
                                              matchExpressions:
                                                description: A list of node selector
                                                  requirements by node's labels.
                                                items:
                                                  description: |-
                                                    A node selector requirement is a selector that contains values, a key, and an operator
                                                    that relates the key and values.
                                                  properties:
                                                    key:
                                                      description: The label key that
                                                        the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        Represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        An array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. If the operator is Gt or Lt, the values
                                                        array must have a single element, which will be interpreted as an integer.
                                                        This array is replaced during a strategic merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                    - key
                                                    - operator
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              matchFields:
                                                description: A list of node selector
                                                  requirements by node's fields.
                                                items:
                                                  description: |-
                                                    A node selector requirement is a selector that contains values, a key, and an operator
                                                    that relates the key and values.
                                                  properties:
                                                    key:
                                                      description: The label key that
                                                        the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        Represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        An array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. If the operator is Gt or Lt, the values
                                                        array must have a single element, which will be interpreted as an integer.
                                                        This array is replaced during a strategic merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                    - key
                                                    - operator
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          weight:
                                            description: Weight associated with matching
                                              the corresponding nodeSelectorTerm, in
                                              the range 1-100.
                                            format: int32
                                            type: integer
                                        required:
                                          - preference
                                          - weight
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      description: |-
                                        If the affinity requirements specified by this field are not met at
                                        scheduling time, the pod will not be scheduled onto the node.
                                        If the affinity requirements specified by this field cease to be met
                                        at some point during pod execution (e.g. due to an update), the system
                                        may or may not try to eventually evict the pod from its node.
                                      properties:
                                        nodeSelectorTerms:
                                          description: Required. A list of node selector
                                            terms. The terms are ORed.
                                          items:
                                            description: |-
                                              A null or empty node selector term matches no objects. The requirements of
                                              them are ANDed.
                                              The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                            properties:
                                              matchExpressions:
                                                description: A list of node selector
                                                  requirements by node's labels.
                                                items:
                                                  description: |-
                                                    A node selector requirement is a selector that contains values, a key, and an operator
                                                    that relates the key and values.
                                                  properties:
                                                    key:
                                                      description: The label key that
                                                        the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        Represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        An array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. If the operator is Gt or Lt, the values
                                                        array must have a single element, which will be interpreted as an integer.
                                                        This array is replaced during a strategic merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                    - key
                                                    - operator
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              matchFields:
                                                description: A list of node selector
                                                  requirements by node's fields.
                                                items:
                                                  description: |-
                                                    A node selector requirement is a selector that contains values, a key, and an operator
                                                    that relates the key and values.
                                                  properties:
                                                    key:
                                                      description: The label key that
                                                        the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        Represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        An array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. If the operator is Gt or Lt, the values
                                                        array must have a single element, which will be interpreted as an integer.
                                                        This array is replaced during a strategic merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                    - key
                                                    - operator
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      required:
                                        - nodeSelectorTerms
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                podAffinity:
                                  description: Describes pod affinity scheduling rules
                                    (e.g. co-locate this pod in the same node, zone,
                                    etc. as some other pod(s)).
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      description: |-
                                        The scheduler will prefer to schedule pods to nodes that satisfy
                                        the affinity expressions specified by this field, but it may choose
                                        a node that violates one or more of the expressions. The node that is
                                        most preferred is the one with the greatest sum of weights, i.e.
                                        for each node that meets all of the scheduling requirements (resource
                                        request, requiredDuringScheduling affinity expressions, etc.),
                                        compute a sum by iterating through the elements of this field and adding
                                        "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                        node(s) with the highest sum are the most preferred.
                                      items:
                                        description: The weights of all of the matched
                                          WeightedPodAffinityTerm fields are added per-node
                                          to find the most preferred node(s)
                                        properties:
                                          podAffinityTerm:
                                            description: Required. A pod affinity term,
                                              associated with the corresponding weight.
                                            properties:
                                              labelSelector:
                                                description: |-
                                                  A label query over a set of resources, in this case pods.
                                                  If it's null, this PodAffinityTerm matches with no Pods.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions is
                                                      a list of label selector requirements.
                                                      The requirements are ANDed.
                                                    items:
                                                      description: |-
                                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                                        relates the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the label
                                                            key that the selector applies
                                                            to.
                                                          type: string
                                                        operator:
                                                          description: |-
                                                            operator represents a key's relationship to a set of values.
                                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: |-
                                                            values is an array of string values. If the operator is In or NotIn,
                                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                            the values array must be empty. This array is replaced during a strategic
                                                            merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                      required:
                                                        - key
                                                        - operator
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: |-
                                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                    type: object
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              matchLabelKeys:
                                                description: |-
                                                  MatchLabelKeys is a set of pod label keys to select which pods will
                                                  be taken into consideration. The keys are used to lookup values from the
                                                  incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                  to select the group of existing pods which pods will be taken into consideration
                                                  for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                  pod labels will be ignored. The default value is empty.
                                                  The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                  Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                  This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              mismatchLabelKeys:
                                                description: |-
                                                  MismatchLabelKeys is a set of pod label keys to select which pods will
                                                  be taken into consideration. The keys are used to lookup values from the
                                                  incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                  to select the group of existing pods which pods will be taken into consideration
                                                  for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                  pod labels will be ignored. The default value is empty.
                                                  The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                  Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                  This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              namespaceSelector:
                                                description: |-
                                                  A label query over the set of namespaces that the term applies to.
                                                  The term is applied to the union of the namespaces selected by this field
                                                  and the ones listed in the namespaces field.
                                                  null selector and null or empty namespaces list means "this pod's namespace".
                                                  An empty selector ({}) matches all namespaces.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions is
                                                      a list of label selector requirements.
                                                      The requirements are ANDed.
                                                    items:
                                                      description: |-
                                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                                        relates the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the label
                                                            key that the selector applies
                                                            to.
                                                          type: string
                                                        operator:
                                                          description: |-
                                                            operator represents a key's relationship to a set of values.
                                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: |-
                                                            values is an array of string values. If the operator is In or NotIn,
                                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                            the values array must be empty. This array is replaced during a strategic
                                                            merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                      required:
                                                        - key
                                                        - operator
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: |-
                                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                    type: object
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              namespaces:
                                                description: |-
                                                  namespaces specifies a static list of namespace names that the term applies to.
                                                  The term is applied to the union of the namespaces listed in this field
                                                  and the ones selected by namespaceSelector.
                                                  null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              topologyKey:
                                                description: |-
                                                  This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                  the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                  whose value of the label with key topologyKey matches that of any node on which any of the
                                                  selected pods is running.
                                                  Empty topologyKey is not allowed.
                                                type: string
                                            required:
                                              - topologyKey
                                            type: object
                                          weight:
                                            description: |-
                                              weight associated with matching the corresponding podAffinityTerm,
                                              in the range 1-100.
                                            format: int32
                                            type: integer
                                        required:
                                          - podAffinityTerm
                                          - weight
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      description: |-
                                        If the affinity requirements specified by this field are not met at
                                        scheduling time, the pod will not be scheduled onto the node.
                                        If the affinity requirements specified by this field cease to be met
                                        at some point during pod execution (e.g. due to a pod label update), the
                                        system may or may not try to eventually evict the pod from its node.
                                        When there are multiple elements, the lists of nodes corresponding to each
                                        podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                      items:
                                        description: |-
                                          Defines a set of pods (namely those matching the labelSelector
                                          relative to the given namespace(s)) that this pod should be
                                          co-located (affinity) or not co-located (anti-affinity) with,
                                          where co-located is defined as running on a node whose value of
                                          the label with key <topologyKey> matches that of any node on which
                                          a pod of the set of pods is running
                                        properties:
                                          labelSelector:
                                            description: |-
                                              A label query over a set of resources, in this case pods.
                                              If it's null, this PodAffinityTerm matches with no Pods.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a list
                                                  of label selector requirements. The
                                                  requirements are ANDed.
                                                items:
                                                  description: |-
                                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                                    relates the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        operator represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        values is an array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. This array is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                    - key
                                                    - operator
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: |-
                                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                type: object
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          matchLabelKeys:
                                            description: |-
                                              MatchLabelKeys is a set of pod label keys to select which pods will
                                              be taken into consideration. The keys are used to lookup values from the
                                              incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                              to select the group of existing pods which pods will be taken into consideration
                                              for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                              pod labels will be ignored. The default value is empty.
                                              The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                              Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                              This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          mismatchLabelKeys:
                                            description: |-
                                              MismatchLabelKeys is a set of pod label keys to select which pods will
                                              be taken into consideration. The keys are used to lookup values from the
                                              incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                              to select the group of existing pods which pods will be taken into consideration
                                              for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                              pod labels will be ignored. The default value is empty.
                                              The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                              Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                              This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          namespaceSelector:
                                            description: |-
                                              A label query over the set of namespaces that the term applies to.
                                              The term is applied to the union of the namespaces selected by this field
                                              and the ones listed in the namespaces field.
                                              null selector and null or empty namespaces list means "this pod's namespace".
                                              An empty selector ({}) matches all namespaces.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a list
                                                  of label selector requirements. The
                                                  requirements are ANDed.
                                                items:
                                                  description: |-
                                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                                    relates the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        operator represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        values is an array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. This array is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                    - key
                                                    - operator
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: |-
                                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                type: object
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          namespaces:
                                            description: |-
                                              namespaces specifies a static list of namespace names that the term applies to.
                                              The term is applied to the union of the namespaces listed in this field
                                              and the ones selected by namespaceSelector.
                                              null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          topologyKey:
                                            description: |-
                                              This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                              the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                              whose value of the label with key topologyKey matches that of any node on which any of the
                                              selected pods is running.
                                              Empty topologyKey is not allowed.
                                            type: string
                                        required:
                                          - topologyKey
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  type: object
                                podAntiAffinity:
                                  description: Describes pod anti-affinity scheduling
                                    rules (e.g. avoid putting this pod in the same node,
                                    zone, etc. as some other pod(s)).
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      description: |-
                                        The scheduler will prefer to schedule pods to nodes that satisfy
                                        the anti-affinity expressions specified by this field, but it may choose
                                        a node that violates one or more of the expressions. The node that is
                                        most preferred is the one with the greatest sum of weights, i.e.
                                        for each node that meets all of the scheduling requirements (resource
                                        request, requiredDuringScheduling anti-affinity expressions, etc.),
                                        compute a sum by iterating through the elements of this field and adding
                                        "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                        node(s) with the highest sum are the most preferred.
                                      items:
                                        description: The weights of all of the matched
                                          WeightedPodAffinityTerm fields are added per-node
                                          to find the most preferred node(s)
                                        properties:
                                          podAffinityTerm:
                                            description: Required. A pod affinity term,
                                              associated with the corresponding weight.
                                            properties:
                                              labelSelector:
                                                description: |-
                                                  A label query over a set of resources, in this case pods.
                                                  If it's null, this PodAffinityTerm matches with no Pods.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions is
                                                      a list of label selector requirements.
                                                      The requirements are ANDed.
                                                    items:
                                                      description: |-
                                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                                        relates the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the label
                                                            key that the selector applies
                                                            to.
                                                          type: string
                                                        operator:
                                                          description: |-
                                                            operator represents a key's relationship to a set of values.
                                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: |-
                                                            values is an array of string values. If the operator is In or NotIn,
                                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                            the values array must be empty. This array is replaced during a strategic
                                                            merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                      required:
                                                        - key
                                                        - operator
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: |-
                                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                    type: object
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              matchLabelKeys:
                                                description: |-
                                                  MatchLabelKeys is a set of pod label keys to select which pods will
                                                  be taken into consideration. The keys are used to lookup values from the
                                                  incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                  to select the group of existing pods which pods will be taken into consideration
                                                  for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                  pod labels will be ignored. The default value is empty.
                                                  The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                  Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                  This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              mismatchLabelKeys:
                                                description: |-
                                                  MismatchLabelKeys is a set of pod label keys to select which pods will
                                                  be taken into consideration. The keys are used to lookup values from the
                                                  incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                  to select the group of existing pods which pods will be taken into consideration
                                                  for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                  pod labels will be ignored. The default value is empty.
                                                  The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                  Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                  This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              namespaceSelector:
                                                description: |-
                                                  A label query over the set of namespaces that the term applies to.
                                                  The term is applied to the union of the namespaces selected by this field
                                                  and the ones listed in the namespaces field.
                                                  null selector and null or empty namespaces list means "this pod's namespace".
                                                  An empty selector ({}) matches all namespaces.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions is
                                                      a list of label selector requirements.
                                                      The requirements are ANDed.
                                                    items:
                                                      description: |-
                                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                                        relates the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the label
                                                            key that the selector applies
                                                            to.
                                                          type: string
                                                        operator:
                                                          description: |-
                                                            operator represents a key's relationship to a set of values.
                                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: |-
                                                            values is an array of string values. If the operator is In or NotIn,
                                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                            the values array must be empty. This array is replaced during a strategic
                                                            merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                      required:
                                                        - key
                                                        - operator
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: |-
                                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                    type: object
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              namespaces:
                                                description: |-
                                                  namespaces specifies a static list of namespace names that the term applies to.
                                                  The term is applied to the union of the namespaces listed in this field
                                                  and the ones selected by namespaceSelector.
                                                  null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              topologyKey:
                                                description: |-
                                                  This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                  the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                  whose value of the label with key topologyKey matches that of any node on which any of the
                                                  selected pods is running.
                                                  Empty topologyKey is not allowed.
                                                type: string
                                            required:
                                              - topologyKey
                                            type: object
                                          weight:
                                            description: |-
                                              weight associated with matching the corresponding podAffinityTerm,
                                              in the range 1-100.
                                            format: int32
                                            type: integer
                                        required:
                                          - podAffinityTerm
                                          - weight
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      description: |-
                                        If the anti-affinity requirements specified by this field are not met at
                                        scheduling time, the pod will not be scheduled onto the node.
                                        If the anti-affinity requirements specified by this field cease to be met
                                        at some point during pod execution (e.g. due to a pod label update), the
                                        system may or may not try to eventually evict the pod from its node.
                                        When there are multiple elements, the lists of nodes corresponding to each
                                        podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                      items:
                                        description: |-
                                          Defines a set of pods (namely those matching the labelSelector
                                          relative to the given namespace(s)) that this pod should be
                                          co-located (affinity) or not co-located (anti-affinity) with,
                                          where co-located is defined as running on a node whose value of
                                          the label with key <topologyKey> matches that of any node on which
                                          a pod of the set of pods is running
                                        properties:
                                          labelSelector:
                                            description: |-
                                              A label query over a set of resources, in this case pods.
                                              If it's null, this PodAffinityTerm matches with no Pods.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a list
                                                  of label selector requirements. The
                                                  requirements are ANDed.
                                                items:
                                                  description: |-
                                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                                    relates the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        operator represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        values is an array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. This array is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                    - key
                                                    - operator
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: |-
                                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                type: object
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          matchLabelKeys:
                                            description: |-
                                              MatchLabelKeys is a set of pod label keys to select which pods will
                                              be taken into consideration. The keys are used to lookup values from the
                                              incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                              to select the group of existing pods which pods will be taken into consideration
                                              for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                              pod labels will be ignored. The default value is empty.
                                              The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                              Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                              This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          mismatchLabelKeys:
                                            description: |-
                                              MismatchLabelKeys is a set of pod label keys to select which pods will
                                              be taken into consideration. The keys are used to lookup values from the
                                              incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                              to select the group of existing pods which pods will be taken into consideration
                                              for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                              pod labels will be ignored. The default value is empty.
                                              The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                              Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                              This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          namespaceSelector:
                                            description: |-
                                              A label query over the set of namespaces that the term applies to.
                                              The term is applied to the union of the namespaces selected by this field
                                              and the ones listed in the namespaces field.
                                              null selector and null or empty namespaces list means "this pod's namespace".
                                              An empty selector ({}) matches all namespaces.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a list
                                                  of label selector requirements. The
                                                  requirements are ANDed.
                                                items:
                                                  description: |-
                                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                                    relates the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        operator represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        values is an array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. This array is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                    - key
                                                    - operator
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: |-
                                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                type: object
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          namespaces:
                                            description: |-
                                              namespaces specifies a static list of namespace names that the term applies to.
                                              The term is applied to the union of the namespaces listed in this field
                                              and the ones selected by namespaceSelector.
                                              null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          topologyKey:
                                            description: |-
                                              This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                              the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                              whose value of the label with key topologyKey matches that of any node on which any of the
                                              selected pods is running.
                                              Empty topologyKey is not allowed.
                                            type: string
                                        required:
                                          - topologyKey
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  type: object
                              type: object
                            enableServiceLinks:
                              description: EnableServiceLinks Indicates whether information
                                about services should be injected into Pod’s environment
                                variables.
                              type: boolean
                            securityContext:
                              description: Security context for pods such as permissions
                                and privilege escalation.
                              properties:
                                appArmorProfile:
                                  description: |-
                                    appArmorProfile is the AppArmor options to use by the containers in this pod.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  properties:
                                    localhostProfile:
                                      description: |-
                                        localhostProfile indicates a profile loaded on the node that should be used.
                                        The profile must be preconfigured on the node to work.
                                        Must match the loaded name of the profile.
                                        Must be set if and only if type is "Localhost".
                                      type: string
                                    type:
                                      description: |-
                                        type indicates which kind of AppArmor profile will be applied.
                                        Valid options are:
                                          Localhost - a profile pre-loaded on the node.
                                          RuntimeDefault - the container runtime's default profile.
                                          Unconfined - no AppArmor enforcement.
                                      type: string
                                  required:
                                    - type
                                  type: object
                                fsGroup:
                                  description: |-
                                    A special supplemental group that applies to all containers in a pod.
                                    Some volume types allow the Kubelet to change the ownership of that volume
                                    to be owned by the pod:
                                    
                                    1. The owning GID will be the FSGroup
                                    2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
                                    3. The permission bits are OR'd with rw-rw----
                                    
                                    If unset, the Kubelet will not modify the ownership and permissions of any volume.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  format: int64
                                  type: integer
                                fsGroupChangePolicy:
                                  description: |-
                                    fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
                                    before being exposed inside Pod. This field will only apply to
                                    volume types which support fsGroup based ownership(and permissions).
                                    It will have no effect on ephemeral volume types such as: secret, configmaps
                                    and emptydir.
                                    Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  type: string
                                runAsGroup:
                                  description: |-
                                    The GID to run the entrypoint of the container process.
                                    Uses runtime default if unset.
                                    May also be set in SecurityContext.  If set in both SecurityContext and
                                    PodSecurityContext, the value specified in SecurityContext takes precedence
                                    for that container.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  format: int64
                                  type: integer
                                runAsNonRoot:
                                  description: |-
                                    Indicates that the container must run as a non-root user.
                                    If true, the Kubelet will validate the image at runtime to ensure that it
                                    does not run as UID 0 (root) and fail to start the container if it does.
                                    If unset or false, no such validation will be performed.
                                    May also be set in SecurityContext.  If set in both SecurityContext and
                                    PodSecurityContext, the value specified in SecurityContext takes precedence.
                                  type: boolean
                                runAsUser:
                                  description: |-
                                    The UID to run the entrypoint of the container process.
                                    Defaults to user specified in image metadata if unspecified.
                                    May also be set in SecurityContext.  If set in both SecurityContext and
                                    PodSecurityContext, the value specified in SecurityContext takes precedence
                                    for that container.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  format: int64
                                  type: integer
                                seLinuxChangePolicy:
                                  description: |-
                                    seLinuxChangePolicy defines how the container's SELinux label is applied to all volumes used by the Pod.
                                    It has no effect on nodes that do not support SELinux or to volumes does not support SELinux.
                                    Valid values are "MountOption" and "Recursive".
                                    
                                    "Recursive" means relabeling of all files on all Pod volumes by the container runtime.
                                    This may be slow for large volumes, but allows mixing privileged and unprivileged Pods sharing the same volume on the same node.
                                    
                                    "MountOption" mounts all eligible Pod volumes with `-o context` mount option.
                                    This requires all Pods that share the same volume to use the same SELinux label.
                                    It is not possible to share the same volume among privileged and unprivileged Pods.
                                    Eligible volumes are in-tree FibreChannel and iSCSI volumes, and all CSI volumes
                                    whose CSI driver announces SELinux support by setting spec.seLinuxMount: true in their
                                    CSIDriver instance. Other volumes are always re-labelled recursively.
                                    "MountOption" value is allowed only when SELinuxMount feature gate is enabled.
                                    
                                    If not specified and SELinuxMount feature gate is enabled, "MountOption" is used.
                                    If not specified and SELinuxMount feature gate is disabled, "MountOption" is used for ReadWriteOncePod volumes
                                    and "Recursive" for all other volumes.
                                    
                                    This field affects only Pods that have SELinux label set, either in PodSecurityContext or in SecurityContext of all containers.
                                    
                                    All Pods that use the same volume should use the same seLinuxChangePolicy, otherwise some pods can get stuck in ContainerCreating state.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  type: string
                                seLinuxOptions:
                                  description: |-
                                    The SELinux context to be applied to all containers.
                                    If unspecified, the container runtime will allocate a random SELinux context for each
                                    container.  May also be set in SecurityContext.  If set in
                                    both SecurityContext and PodSecurityContext, the value specified in SecurityContext
                                    takes precedence for that container.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  properties:
                                    level:
                                      description: Level is SELinux level label that
                                        applies to the container.
                                      type: string
                                    role:
                                      description: Role is a SELinux role label that
                                        applies to the container.
                                      type: string
                                    type:
                                      description: Type is a SELinux type label that
                                        applies to the container.
                                      type: string
                                    user:
                                      description: User is a SELinux user label that
                                        applies to the container.
                                      type: string
                                  type: object
                                seccompProfile:
                                  description: |-
                                    The seccomp options to use by the containers in this pod.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  properties:
                                    localhostProfile:
                                      description: |-
                                        localhostProfile indicates a profile defined in a file on the node should be used.
                                        The profile must be preconfigured on the node to work.
                                        Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                        Must be set if type is "Localhost". Must NOT be set for any other type.
                                      type: string
                                    type:
                                      description: |-
                                        type indicates which kind of seccomp profile will be applied.
                                        Valid options are:
                                        
                                        Localhost - a profile defined in a file on the node should be used.
                                        RuntimeDefault - the container runtime default profile should be used.
                                        Unconfined - no profile should be applied.
                                      type: string
                                  required:
                                    - type
                                  type: object
                                supplementalGroups:
                                  description: |-
                                    A list of groups applied to the first process run in each container, in
                                    addition to the container's primary GID and fsGroup (if specified).  If
                                    the SupplementalGroupsPolicy feature is enabled, the
                                    supplementalGroupsPolicy field determines whether these are in addition
                                    to or instead of any group memberships defined in the container image.
                                    If unspecified, no additional groups are added, though group memberships
                                    defined in the container image may still be used, depending on the
                                    supplementalGroupsPolicy field.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  items:
                                    format: int64
                                    type: integer
                                  type: array
                                  x-kubernetes-list-type: atomic
                                supplementalGroupsPolicy:
                                  description: |-
                                    Defines how supplemental groups of the first container processes are calculated.
                                    Valid values are "Merge" and "Strict". If not specified, "Merge" is used.
                                    (Alpha) Using the field requires the SupplementalGroupsPolicy feature gate to be enabled
                                    and the container runtime must implement support for this feature.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  type: string
                                sysctls:
                                  description: |-
                                    Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
                                    sysctls (by the container runtime) might fail to launch.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  items:
                                    description: Sysctl defines a kernel parameter to
                                      be set
                                    properties:
                                      name:
                                        description: Name of a property to set
                                        type: string
                                      value:
                                        description: Value of a property to set
                                        type: string
                                    required:
                                      - name
                                      - value
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                windowsOptions:
                                  description: |-
                                    The Windows specific settings applied to all containers.
                                    If unspecified, the options within a container's SecurityContext will be used.
                                    If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                    Note that this field cannot be set when spec.os.name is linux.
                                  properties:
                                    gmsaCredentialSpec:
                                      description: |-
                                        GMSACredentialSpec is where the GMSA admission webhook
                                        (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                        GMSA credential spec named by the GMSACredentialSpecName field.
                                      type: string
                                    gmsaCredentialSpecName:
                                      description: GMSACredentialSpecName is the name
                                        of the GMSA credential spec to use.
                                      type: string
                                    hostProcess:
                                      description: |-
                                        HostProcess determines if a container should be run as a 'Host Process' container.
                                        All of a Pod's containers must have the same effective HostProcess value
                                        (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                        In addition, if HostProcess is true then HostNetwork must also be set to true.
                                      type: boolean
                                    runAsUserName:
                                      description: |-
                                        The UserName in Windows to run the entrypoint of the container process.
                                        Defaults to the user specified in image metadata if unspecified.
                                        May also be set in PodSecurityContext. If set in both SecurityContext and
                                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                                      type: string
                                  type: object
                              type: object
                            tolerations:
                              description: Tolerations for pods to schedule onto nodes
                                with taints.
                              items:
                                description: |-
                                  The pod this Toleration is attached to tolerates any taint that matches
                                  the triple <key,value,effect> using the matching operator <operator>.
                                properties:
                                  effect:
                                    description: |-
                                      Effect indicates the taint effect to match. Empty means match all taint effects.
                                      When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                    type: string
                                  key:
                                    description: |-
                                      Key is the taint key that the toleration applies to. Empty means match all taint keys.
                                      If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                    type: string
                                  operator:
                                    description: |-
                                      Operator represents a key's relationship to the value.
                                      Valid operators are Exists and Equal. Defaults to Equal.
                                      Exists is equivalent to wildcard for value, so that a pod can
                                      tolerate all taints of a particular category.
                                    type: string
                                  tolerationSeconds:
                                    description: |-
                                      TolerationSeconds represents the period of time the toleration (which must be
                                      of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                                      it is not set, which means tolerate the taint forever (do not evict). Zero and
                                      negative values will be treated as 0 (evict immediately) by the system.
                                    format: int64
                                    type: integer
                                  value:
                                    description: |-
                                      Value is the taint value the toleration matches to.
                                      If the operator is Exists, the value should be empty, otherwise just a regular string.
                                    type: string
                                type: object
                              type: array
                          type: object
                      type: object
                  type: object
                entityOperator:
                  description: EntityOperator configuration
                  properties:
                    template:
                      properties:
                        pod:
                          description: |-
                            Pod template for containers in the pod.
                            Contains security context, affinity and tolerations settings.
                          properties:
                            affinity:
                              description: Affinity and anti-affinity rules for pod
                                scheduling.
                              properties:
                                nodeAffinity:
                                  description: Describes node affinity scheduling rules
                                    for the pod.
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      description: |-
                                        The scheduler will prefer to schedule pods to nodes that satisfy
                                        the affinity expressions specified by this field, but it may choose
                                        a node that violates one or more of the expressions. The node that is
                                        most preferred is the one with the greatest sum of weights, i.e.
                                        for each node that meets all of the scheduling requirements (resource
                                        request, requiredDuringScheduling affinity expressions, etc.),
                                        compute a sum by iterating through the elements of this field and adding
                                        "weight" to the sum if the node matches the corresponding matchExpressions; the
                                        node(s) with the highest sum are the most preferred.
                                      items:
                                        description: |-
                                          An empty preferred scheduling term matches all objects with implicit weight 0
                                          (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                                        properties:
                                          preference:
                                            description: A node selector term, associated
                                              with the corresponding weight.
                                            properties:
                                              matchExpressions:
                                                description: A list of node selector
                                                  requirements by node's labels.
                                                items:
                                                  description: |-
                                                    A node selector requirement is a selector that contains values, a key, and an operator
                                                    that relates the key and values.
                                                  properties:
                                                    key:
                                                      description: The label key that
                                                        the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        Represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        An array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. If the operator is Gt or Lt, the values
                                                        array must have a single element, which will be interpreted as an integer.
                                                        This array is replaced during a strategic merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                    - key
                                                    - operator
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              matchFields:
                                                description: A list of node selector
                                                  requirements by node's fields.
                                                items:
                                                  description: |-
                                                    A node selector requirement is a selector that contains values, a key, and an operator
                                                    that relates the key and values.
                                                  properties:
                                                    key:
                                                      description: The label key that
                                                        the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        Represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        An array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. If the operator is Gt or Lt, the values
                                                        array must have a single element, which will be interpreted as an integer.
                                                        This array is replaced during a strategic merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                    - key
                                                    - operator
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          weight:
                                            description: Weight associated with matching
                                              the corresponding nodeSelectorTerm, in
                                              the range 1-100.
                                            format: int32
                                            type: integer
                                        required:
                                          - preference
                                          - weight
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      description: |-
                                        If the affinity requirements specified by this field are not met at
                                        scheduling time, the pod will not be scheduled onto the node.
                                        If the affinity requirements specified by this field cease to be met
                                        at some point during pod execution (e.g. due to an update), the system
                                        may or may not try to eventually evict the pod from its node.
                                      properties:
                                        nodeSelectorTerms:
                                          description: Required. A list of node selector
                                            terms. The terms are ORed.
                                          items:
                                            description: |-
                                              A null or empty node selector term matches no objects. The requirements of
                                              them are ANDed.
                                              The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                            properties:
                                              matchExpressions:
                                                description: A list of node selector
                                                  requirements by node's labels.
                                                items:
                                                  description: |-
                                                    A node selector requirement is a selector that contains values, a key, and an operator
                                                    that relates the key and values.
                                                  properties:
                                                    key:
                                                      description: The label key that
                                                        the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        Represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        An array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. If the operator is Gt or Lt, the values
                                                        array must have a single element, which will be interpreted as an integer.
                                                        This array is replaced during a strategic merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                    - key
                                                    - operator
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              matchFields:
                                                description: A list of node selector
                                                  requirements by node's fields.
                                                items:
                                                  description: |-
                                                    A node selector requirement is a selector that contains values, a key, and an operator
                                                    that relates the key and values.
                                                  properties:
                                                    key:
                                                      description: The label key that
                                                        the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        Represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        An array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. If the operator is Gt or Lt, the values
                                                        array must have a single element, which will be interpreted as an integer.
                                                        This array is replaced during a strategic merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                    - key
                                                    - operator
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      required:
                                        - nodeSelectorTerms
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                podAffinity:
                                  description: Describes pod affinity scheduling rules
                                    (e.g. co-locate this pod in the same node, zone,
                                    etc. as some other pod(s)).
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      description: |-
                                        The scheduler will prefer to schedule pods to nodes that satisfy
                                        the affinity expressions specified by this field, but it may choose
                                        a node that violates one or more of the expressions. The node that is
                                        most preferred is the one with the greatest sum of weights, i.e.
                                        for each node that meets all of the scheduling requirements (resource
                                        request, requiredDuringScheduling affinity expressions, etc.),
                                        compute a sum by iterating through the elements of this field and adding
                                        "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                        node(s) with the highest sum are the most preferred.
                                      items:
                                        description: The weights of all of the matched
                                          WeightedPodAffinityTerm fields are added per-node
                                          to find the most preferred node(s)
                                        properties:
                                          podAffinityTerm:
                                            description: Required. A pod affinity term,
                                              associated with the corresponding weight.
                                            properties:
                                              labelSelector:
                                                description: |-
                                                  A label query over a set of resources, in this case pods.
                                                  If it's null, this PodAffinityTerm matches with no Pods.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions is
                                                      a list of label selector requirements.
                                                      The requirements are ANDed.
                                                    items:
                                                      description: |-
                                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                                        relates the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the label
                                                            key that the selector applies
                                                            to.
                                                          type: string
                                                        operator:
                                                          description: |-
                                                            operator represents a key's relationship to a set of values.
                                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: |-
                                                            values is an array of string values. If the operator is In or NotIn,
                                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                            the values array must be empty. This array is replaced during a strategic
                                                            merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                      required:
                                                        - key
                                                        - operator
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: |-
                                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                    type: object
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              matchLabelKeys:
                                                description: |-
                                                  MatchLabelKeys is a set of pod label keys to select which pods will
                                                  be taken into consideration. The keys are used to lookup values from the
                                                  incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                  to select the group of existing pods which pods will be taken into consideration
                                                  for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                  pod labels will be ignored. The default value is empty.
                                                  The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                  Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                  This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              mismatchLabelKeys:
                                                description: |-
                                                  MismatchLabelKeys is a set of pod label keys to select which pods will
                                                  be taken into consideration. The keys are used to lookup values from the
                                                  incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                  to select the group of existing pods which pods will be taken into consideration
                                                  for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                  pod labels will be ignored. The default value is empty.
                                                  The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                  Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                  This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              namespaceSelector:
                                                description: |-
                                                  A label query over the set of namespaces that the term applies to.
                                                  The term is applied to the union of the namespaces selected by this field
                                                  and the ones listed in the namespaces field.
                                                  null selector and null or empty namespaces list means "this pod's namespace".
                                                  An empty selector ({}) matches all namespaces.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions is
                                                      a list of label selector requirements.
                                                      The requirements are ANDed.
                                                    items:
                                                      description: |-
                                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                                        relates the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the label
                                                            key that the selector applies
                                                            to.
                                                          type: string
                                                        operator:
                                                          description: |-
                                                            operator represents a key's relationship to a set of values.
                                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: |-
                                                            values is an array of string values. If the operator is In or NotIn,
                                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                            the values array must be empty. This array is replaced during a strategic
                                                            merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                      required:
                                                        - key
                                                        - operator
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: |-
                                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                    type: object
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              namespaces:
                                                description: |-
                                                  namespaces specifies a static list of namespace names that the term applies to.
                                                  The term is applied to the union of the namespaces listed in this field
                                                  and the ones selected by namespaceSelector.
                                                  null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              topologyKey:
                                                description: |-
                                                  This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                  the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                  whose value of the label with key topologyKey matches that of any node on which any of the
                                                  selected pods is running.
                                                  Empty topologyKey is not allowed.
                                                type: string
                                            required:
                                              - topologyKey
                                            type: object
                                          weight:
                                            description: |-
                                              weight associated with matching the corresponding podAffinityTerm,
                                              in the range 1-100.
                                            format: int32
                                            type: integer
                                        required:
                                          - podAffinityTerm
                                          - weight
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      description: |-
                                        If the affinity requirements specified by this field are not met at
                                        scheduling time, the pod will not be scheduled onto the node.
                                        If the affinity requirements specified by this field cease to be met
                                        at some point during pod execution (e.g. due to a pod label update), the
                                        system may or may not try to eventually evict the pod from its node.
                                        When there are multiple elements, the lists of nodes corresponding to each
                                        podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                      items:
                                        description: |-
                                          Defines a set of pods (namely those matching the labelSelector
                                          relative to the given namespace(s)) that this pod should be
                                          co-located (affinity) or not co-located (anti-affinity) with,
                                          where co-located is defined as running on a node whose value of
                                          the label with key <topologyKey> matches that of any node on which
                                          a pod of the set of pods is running
                                        properties:
                                          labelSelector:
                                            description: |-
                                              A label query over a set of resources, in this case pods.
                                              If it's null, this PodAffinityTerm matches with no Pods.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a list
                                                  of label selector requirements. The
                                                  requirements are ANDed.
                                                items:
                                                  description: |-
                                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                                    relates the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        operator represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        values is an array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. This array is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                    - key
                                                    - operator
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: |-
                                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                type: object
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          matchLabelKeys:
                                            description: |-
                                              MatchLabelKeys is a set of pod label keys to select which pods will
                                              be taken into consideration. The keys are used to lookup values from the
                                              incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                              to select the group of existing pods which pods will be taken into consideration
                                              for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                              pod labels will be ignored. The default value is empty.
                                              The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                              Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                              This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          mismatchLabelKeys:
                                            description: |-
                                              MismatchLabelKeys is a set of pod label keys to select which pods will
                                              be taken into consideration. The keys are used to lookup values from the
                                              incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                              to select the group of existing pods which pods will be taken into consideration
                                              for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                              pod labels will be ignored. The default value is empty.
                                              The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                              Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                              This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          namespaceSelector:
                                            description: |-
                                              A label query over the set of namespaces that the term applies to.
                                              The term is applied to the union of the namespaces selected by this field
                                              and the ones listed in the namespaces field.
                                              null selector and null or empty namespaces list means "this pod's namespace".
                                              An empty selector ({}) matches all namespaces.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a list
                                                  of label selector requirements. The
                                                  requirements are ANDed.
                                                items:
                                                  description: |-
                                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                                    relates the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        operator represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        values is an array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. This array is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                    - key
                                                    - operator
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: |-
                                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                type: object
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          namespaces:
                                            description: |-
                                              namespaces specifies a static list of namespace names that the term applies to.
                                              The term is applied to the union of the namespaces listed in this field
                                              and the ones selected by namespaceSelector.
                                              null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          topologyKey:
                                            description: |-
                                              This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                              the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                              whose value of the label with key topologyKey matches that of any node on which any of the
                                              selected pods is running.
                                              Empty topologyKey is not allowed.
                                            type: string
                                        required:
                                          - topologyKey
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  type: object
                                podAntiAffinity:
                                  description: Describes pod anti-affinity scheduling
                                    rules (e.g. avoid putting this pod in the same node,
                                    zone, etc. as some other pod(s)).
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      description: |-
                                        The scheduler will prefer to schedule pods to nodes that satisfy
                                        the anti-affinity expressions specified by this field, but it may choose
                                        a node that violates one or more of the expressions. The node that is
                                        most preferred is the one with the greatest sum of weights, i.e.
                                        for each node that meets all of the scheduling requirements (resource
                                        request, requiredDuringScheduling anti-affinity expressions, etc.),
                                        compute a sum by iterating through the elements of this field and adding
                                        "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                        node(s) with the highest sum are the most preferred.
                                      items:
                                        description: The weights of all of the matched
                                          WeightedPodAffinityTerm fields are added per-node
                                          to find the most preferred node(s)
                                        properties:
                                          podAffinityTerm:
                                            description: Required. A pod affinity term,
                                              associated with the corresponding weight.
                                            properties:
                                              labelSelector:
                                                description: |-
                                                  A label query over a set of resources, in this case pods.
                                                  If it's null, this PodAffinityTerm matches with no Pods.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions is
                                                      a list of label selector requirements.
                                                      The requirements are ANDed.
                                                    items:
                                                      description: |-
                                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                                        relates the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the label
                                                            key that the selector applies
                                                            to.
                                                          type: string
                                                        operator:
                                                          description: |-
                                                            operator represents a key's relationship to a set of values.
                                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: |-
                                                            values is an array of string values. If the operator is In or NotIn,
                                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                            the values array must be empty. This array is replaced during a strategic
                                                            merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                      required:
                                                        - key
                                                        - operator
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: |-
                                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                    type: object
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              matchLabelKeys:
                                                description: |-
                                                  MatchLabelKeys is a set of pod label keys to select which pods will
                                                  be taken into consideration. The keys are used to lookup values from the
                                                  incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                  to select the group of existing pods which pods will be taken into consideration
                                                  for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                  pod labels will be ignored. The default value is empty.
                                                  The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                  Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                  This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              mismatchLabelKeys:
                                                description: |-
                                                  MismatchLabelKeys is a set of pod label keys to select which pods will
                                                  be taken into consideration. The keys are used to lookup values from the
                                                  incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                  to select the group of existing pods which pods will be taken into consideration
                                                  for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                  pod labels will be ignored. The default value is empty.
                                                  The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                  Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                  This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              namespaceSelector:
                                                description: |-
                                                  A label query over the set of namespaces that the term applies to.
                                                  The term is applied to the union of the namespaces selected by this field
                                                  and the ones listed in the namespaces field.
                                                  null selector and null or empty namespaces list means "this pod's namespace".
                                                  An empty selector ({}) matches all namespaces.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions is
                                                      a list of label selector requirements.
                                                      The requirements are ANDed.
                                                    items:
                                                      description: |-
                                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                                        relates the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the label
                                                            key that the selector applies
                                                            to.
                                                          type: string
                                                        operator:
                                                          description: |-
                                                            operator represents a key's relationship to a set of values.
                                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: |-
                                                            values is an array of string values. If the operator is In or NotIn,
                                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                            the values array must be empty. This array is replaced during a strategic
                                                            merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                      required:
                                                        - key
                                                        - operator
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: |-
                                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                    type: object
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              namespaces:
                                                description: |-
                                                  namespaces specifies a static list of namespace names that the term applies to.
                                                  The term is applied to the union of the namespaces listed in this field
                                                  and the ones selected by namespaceSelector.
                                                  null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              topologyKey:
                                                description: |-
                                                  This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                  the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                  whose value of the label with key topologyKey matches that of any node on which any of the
                                                  selected pods is running.
                                                  Empty topologyKey is not allowed.
                                                type: string
                                            required:
                                              - topologyKey
                                            type: object
                                          weight:
                                            description: |-
                                              weight associated with matching the corresponding podAffinityTerm,
                                              in the range 1-100.
                                            format: int32
                                            type: integer
                                        required:
                                          - podAffinityTerm
                                          - weight
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      description: |-
                                        If the anti-affinity requirements specified by this field are not met at
                                        scheduling time, the pod will not be scheduled onto the node.
                                        If the anti-affinity requirements specified by this field cease to be met
                                        at some point during pod execution (e.g. due to a pod label update), the
                                        system may or may not try to eventually evict the pod from its node.
                                        When there are multiple elements, the lists of nodes corresponding to each
                                        podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                      items:
                                        description: |-
                                          Defines a set of pods (namely those matching the labelSelector
                                          relative to the given namespace(s)) that this pod should be
                                          co-located (affinity) or not co-located (anti-affinity) with,
                                          where co-located is defined as running on a node whose value of
                                          the label with key <topologyKey> matches that of any node on which
                                          a pod of the set of pods is running
                                        properties:
                                          labelSelector:
                                            description: |-
                                              A label query over a set of resources, in this case pods.
                                              If it's null, this PodAffinityTerm matches with no Pods.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a list
                                                  of label selector requirements. The
                                                  requirements are ANDed.
                                                items:
                                                  description: |-
                                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                                    relates the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        operator represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        values is an array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. This array is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                    - key
                                                    - operator
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: |-
                                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                type: object
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          matchLabelKeys:
                                            description: |-
                                              MatchLabelKeys is a set of pod label keys to select which pods will
                                              be taken into consideration. The keys are used to lookup values from the
                                              incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                              to select the group of existing pods which pods will be taken into consideration
                                              for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                              pod labels will be ignored. The default value is empty.
                                              The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                              Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                              This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          mismatchLabelKeys:
                                            description: |-
                                              MismatchLabelKeys is a set of pod label keys to select which pods will
                                              be taken into consideration. The keys are used to lookup values from the
                                              incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                              to select the group of existing pods which pods will be taken into consideration
                                              for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                              pod labels will be ignored. The default value is empty.
                                              The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                              Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                              This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          namespaceSelector:
                                            description: |-
                                              A label query over the set of namespaces that the term applies to.
                                              The term is applied to the union of the namespaces selected by this field
                                              and the ones listed in the namespaces field.
                                              null selector and null or empty namespaces list means "this pod's namespace".
                                              An empty selector ({}) matches all namespaces.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a list
                                                  of label selector requirements. The
                                                  requirements are ANDed.
                                                items:
                                                  description: |-
                                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                                    relates the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        operator represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        values is an array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. This array is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                    - key
                                                    - operator
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: |-
                                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                type: object
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          namespaces:
                                            description: |-
                                              namespaces specifies a static list of namespace names that the term applies to.
                                              The term is applied to the union of the namespaces listed in this field
                                              and the ones selected by namespaceSelector.
                                              null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          topologyKey:
                                            description: |-
                                              This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                              the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                              whose value of the label with key topologyKey matches that of any node on which any of the
                                              selected pods is running.
                                              Empty topologyKey is not allowed.
                                            type: string
                                        required:
                                          - topologyKey
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  type: object
                              type: object
                            enableServiceLinks:
                              description: EnableServiceLinks Indicates whether information
                                about services should be injected into Pod’s environment
                                variables.
                              type: boolean
                            securityContext:
                              description: Security context for pods such as permissions
                                and privilege escalation.
                              properties:
                                appArmorProfile:
                                  description: |-
                                    appArmorProfile is the AppArmor options to use by the containers in this pod.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  properties:
                                    localhostProfile:
                                      description: |-
                                        localhostProfile indicates a profile loaded on the node that should be used.
                                        The profile must be preconfigured on the node to work.
                                        Must match the loaded name of the profile.
                                        Must be set if and only if type is "Localhost".
                                      type: string
                                    type:
                                      description: |-
                                        type indicates which kind of AppArmor profile will be applied.
                                        Valid options are:
                                          Localhost - a profile pre-loaded on the node.
                                          RuntimeDefault - the container runtime's default profile.
                                          Unconfined - no AppArmor enforcement.
                                      type: string
                                  required:
                                    - type
                                  type: object
                                fsGroup:
                                  description: |-
                                    A special supplemental group that applies to all containers in a pod.
                                    Some volume types allow the Kubelet to change the ownership of that volume
                                    to be owned by the pod:
                                    
                                    1. The owning GID will be the FSGroup
                                    2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
                                    3. The permission bits are OR'd with rw-rw----
                                    
                                    If unset, the Kubelet will not modify the ownership and permissions of any volume.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  format: int64
                                  type: integer
                                fsGroupChangePolicy:
                                  description: |-
                                    fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
                                    before being exposed inside Pod. This field will only apply to
                                    volume types which support fsGroup based ownership(and permissions).
                                    It will have no effect on ephemeral volume types such as: secret, configmaps
                                    and emptydir.
                                    Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  type: string
                                runAsGroup:
                                  description: |-
                                    The GID to run the entrypoint of the container process.
                                    Uses runtime default if unset.
                                    May also be set in SecurityContext.  If set in both SecurityContext and
                                    PodSecurityContext, the value specified in SecurityContext takes precedence
                                    for that container.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  format: int64
                                  type: integer
                                runAsNonRoot:
                                  description: |-
                                    Indicates that the container must run as a non-root user.
                                    If true, the Kubelet will validate the image at runtime to ensure that it
                                    does not run as UID 0 (root) and fail to start the container if it does.
                                    If unset or false, no such validation will be performed.
                                    May also be set in SecurityContext.  If set in both SecurityContext and
                                    PodSecurityContext, the value specified in SecurityContext takes precedence.
                                  type: boolean
                                runAsUser:
                                  description: |-
                                    The UID to run the entrypoint of the container process.
                                    Defaults to user specified in image metadata if unspecified.
                                    May also be set in SecurityContext.  If set in both SecurityContext and
                                    PodSecurityContext, the value specified in SecurityContext takes precedence
                                    for that container.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  format: int64
                                  type: integer
                                seLinuxChangePolicy:
                                  description: |-
                                    seLinuxChangePolicy defines how the container's SELinux label is applied to all volumes used by the Pod.
                                    It has no effect on nodes that do not support SELinux or to volumes does not support SELinux.
                                    Valid values are "MountOption" and "Recursive".
                                    
                                    "Recursive" means relabeling of all files on all Pod volumes by the container runtime.
                                    This may be slow for large volumes, but allows mixing privileged and unprivileged Pods sharing the same volume on the same node.
                                    
                                    "MountOption" mounts all eligible Pod volumes with `-o context` mount option.
                                    This requires all Pods that share the same volume to use the same SELinux label.
                                    It is not possible to share the same volume among privileged and unprivileged Pods.
                                    Eligible volumes are in-tree FibreChannel and iSCSI volumes, and all CSI volumes
                                    whose CSI driver announces SELinux support by setting spec.seLinuxMount: true in their
                                    CSIDriver instance. Other volumes are always re-labelled recursively.
                                    "MountOption" value is allowed only when SELinuxMount feature gate is enabled.
                                    
                                    If not specified and SELinuxMount feature gate is enabled, "MountOption" is used.
                                    If not specified and SELinuxMount feature gate is disabled, "MountOption" is used for ReadWriteOncePod volumes
                                    and "Recursive" for all other volumes.
                                    
                                    This field affects only Pods that have SELinux label set, either in PodSecurityContext or in SecurityContext of all containers.
                                    
                                    All Pods that use the same volume should use the same seLinuxChangePolicy, otherwise some pods can get stuck in ContainerCreating state.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  type: string
                                seLinuxOptions:
                                  description: |-
                                    The SELinux context to be applied to all containers.
                                    If unspecified, the container runtime will allocate a random SELinux context for each
                                    container.  May also be set in SecurityContext.  If set in
                                    both SecurityContext and PodSecurityContext, the value specified in SecurityContext
                                    takes precedence for that container.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  properties:
                                    level:
                                      description: Level is SELinux level label that
                                        applies to the container.
                                      type: string
                                    role:
                                      description: Role is a SELinux role label that
                                        applies to the container.
                                      type: string
                                    type:
                                      description: Type is a SELinux type label that
                                        applies to the container.
                                      type: string
                                    user:
                                      description: User is a SELinux user label that
                                        applies to the container.
                                      type: string
                                  type: object
                                seccompProfile:
                                  description: |-
                                    The seccomp options to use by the containers in this pod.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  properties:
                                    localhostProfile:
                                      description: |-
                                        localhostProfile indicates a profile defined in a file on the node should be used.
                                        The profile must be preconfigured on the node to work.
                                        Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                        Must be set if type is "Localhost". Must NOT be set for any other type.
                                      type: string
                                    type:
                                      description: |-
                                        type indicates which kind of seccomp profile will be applied.
                                        Valid options are:
                                        
                                        Localhost - a profile defined in a file on the node should be used.
                                        RuntimeDefault - the container runtime default profile should be used.
                                        Unconfined - no profile should be applied.
                                      type: string
                                  required:
                                    - type
                                  type: object
                                supplementalGroups:
                                  description: |-
                                    A list of groups applied to the first process run in each container, in
                                    addition to the container's primary GID and fsGroup (if specified).  If
                                    the SupplementalGroupsPolicy feature is enabled, the
                                    supplementalGroupsPolicy field determines whether these are in addition
                                    to or instead of any group memberships defined in the container image.
                                    If unspecified, no additional groups are added, though group memberships
                                    defined in the container image may still be used, depending on the
                                    supplementalGroupsPolicy field.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  items:
                                    format: int64
                                    type: integer
                                  type: array
                                  x-kubernetes-list-type: atomic
                                supplementalGroupsPolicy:
                                  description: |-
                                    Defines how supplemental groups of the first container processes are calculated.
                                    Valid values are "Merge" and "Strict". If not specified, "Merge" is used.
                                    (Alpha) Using the field requires the SupplementalGroupsPolicy feature gate to be enabled
                                    and the container runtime must implement support for this feature.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  type: string
                                sysctls:
                                  description: |-
                                    Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
                                    sysctls (by the container runtime) might fail to launch.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  items:
                                    description: Sysctl defines a kernel parameter to
                                      be set
                                    properties:
                                      name:
                                        description: Name of a property to set
                                        type: string
                                      value:
                                        description: Value of a property to set
                                        type: string
                                    required:
                                      - name
                                      - value
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                windowsOptions:
                                  description: |-
                                    The Windows specific settings applied to all containers.
                                    If unspecified, the options within a container's SecurityContext will be used.
                                    If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                    Note that this field cannot be set when spec.os.name is linux.
                                  properties:
                                    gmsaCredentialSpec:
                                      description: |-
                                        GMSACredentialSpec is where the GMSA admission webhook
                                        (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                        GMSA credential spec named by the GMSACredentialSpecName field.
                                      type: string
                                    gmsaCredentialSpecName:
                                      description: GMSACredentialSpecName is the name
                                        of the GMSA credential spec to use.
                                      type: string
                                    hostProcess:
                                      description: |-
                                        HostProcess determines if a container should be run as a 'Host Process' container.
                                        All of a Pod's containers must have the same effective HostProcess value
                                        (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                        In addition, if HostProcess is true then HostNetwork must also be set to true.
                                      type: boolean
                                    runAsUserName:
                                      description: |-
                                        The UserName in Windows to run the entrypoint of the container process.
                                        Defaults to the user specified in image metadata if unspecified.
                                        May also be set in PodSecurityContext. If set in both SecurityContext and
                                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                                      type: string
                                  type: object
                              type: object
                            tolerations:
                              description: Tolerations for pods to schedule onto nodes
                                with taints.
                              items:
                                description: |-
                                  The pod this Toleration is attached to tolerates any taint that matches
                                  the triple <key,value,effect> using the matching operator <operator>.
                                properties:
                                  effect:
                                    description: |-
                                      Effect indicates the taint effect to match. Empty means match all taint effects.
                                      When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                    type: string
                                  key:
                                    description: |-
                                      Key is the taint key that the toleration applies to. Empty means match all taint keys.
                                      If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                    type: string
                                  operator:
                                    description: |-
                                      Operator represents a key's relationship to the value.
                                      Valid operators are Exists and Equal. Defaults to Equal.
                                      Exists is equivalent to wildcard for value, so that a pod can
                                      tolerate all taints of a particular category.
                                    type: string
                                  tolerationSeconds:
                                    description: |-
                                      TolerationSeconds represents the period of time the toleration (which must be
                                      of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                                      it is not set, which means tolerate the taint forever (do not evict). Zero and
                                      negative values will be treated as 0 (evict immediately) by the system.
                                    format: int64
                                    type: integer
                                  value:
                                    description: |-
                                      Value is the taint value the toleration matches to.
                                      If the operator is Exists, the value should be empty, otherwise just a regular string.
                                    type: string
                                type: object
                              type: array
                          type: object
                      type: object
                    tlsSidecar:
                      properties:
                        jvmOptions:
                          description: JVM options such as Xms and Xmx
                          properties:
                            -Xms:
                              description: The Xms field sets the JVM min heap size
                                parameter
                              type: string
                            -Xmx:
                              description: The Xmx field sets the JVM max heap size
                                parameter
                              type: string
                          type: object
                        resources:
                          description: Resources defines CPU/memory resource requests/limits
                          properties:
                            claims:
                              description: |-
                                Claims lists the names of resources, defined in spec.resourceClaims,
                                that are used by this container.
                                
                                This is an alpha field and requires enabling the
                                DynamicResourceAllocation feature gate.
                                
                                This field is immutable. It can only be set for containers.
                              items:
                                description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                                properties:
                                  name:
                                    description: |-
                                      Name must match the name of one entry in pod.spec.resourceClaims of
                                      the Pod where this field is used. It makes that resource available
                                      inside a container.
                                    type: string
                                  request:
                                    description: |-
                                      Request is the name chosen for a request in the referenced claim.
                                      If empty, everything from the claim is made available, otherwise
                                      only the result of this request.
                                    type: string
                                required:
                                  - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                                - name
                              x-kubernetes-list-type: map
                            limits:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: |-
                                Limits describes the maximum amount of compute resources allowed.
                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: |-
                                Requests describes the minimum amount of compute resources required.
                                If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                              type: object
                          type: object
                      type: object
                    topicOperator:
                      description: Configuration for TopicOperator
                      properties:
                        jvmOptions:
                          description: JVM options such as Xms and Xmx
                          properties:
                            -Xms:
                              description: The Xms field sets the JVM min heap size
                                parameter
                              type: string
                            -Xmx:
                              description: The Xmx field sets the JVM max heap size
                                parameter
                              type: string
                          type: object
                        logging:
                          description: Logging configuration for TopicOperator.
                          properties:
                            loggers:
                              additionalProperties:
                                type: string
                              description: Loggers is a map from logger name to logger
                                level.
                              type: object
                            type:
                              description: Logging type , it must have the value inline
                              type: string
                          required:
                            - loggers
                            - type
                          type: object
                        resources:
                          description: Resources defines CPU/memory resource requests/limits
                          properties:
                            claims:
                              description: |-
                                Claims lists the names of resources, defined in spec.resourceClaims,
                                that are used by this container.
                                
                                This is an alpha field and requires enabling the
                                DynamicResourceAllocation feature gate.
                                
                                This field is immutable. It can only be set for containers.
                              items:
                                description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                                properties:
                                  name:
                                    description: |-
                                      Name must match the name of one entry in pod.spec.resourceClaims of
                                      the Pod where this field is used. It makes that resource available
                                      inside a container.
                                    type: string
                                  request:
                                    description: |-
                                      Request is the name chosen for a request in the referenced claim.
                                      If empty, everything from the claim is made available, otherwise
                                      only the result of this request.
                                    type: string
                                required:
                                  - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                                - name
                              x-kubernetes-list-type: map
                            limits:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: |-
                                Limits describes the maximum amount of compute resources allowed.
                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: |-
                                Requests describes the minimum amount of compute resources required.
                                If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                              type: object
                          type: object
                      type: object
                    userOperator:
                      description: Configuration for UserOperator
                      properties:
                        jvmOptions:
                          description: JVM options such as Xms and Xmx
                          properties:
                            -Xms:
                              description: The Xms field sets the JVM min heap size
                                parameter
                              type: string
                            -Xmx:
                              description: The Xmx field sets the JVM max heap size
                                parameter
                              type: string
                          type: object
                        logging:
                          description: Logging configuration for UserOperator.
                          properties:
                            loggers:
                              additionalProperties:
                                type: string
                              description: Loggers is a map from logger name to logger
                                level.
                              type: object
                            type:
                              description: Logging type , it must have the value inline
                              type: string
                          required:
                            - loggers
                            - type
                          type: object
                        resources:
                          description: Resources defines CPU/memory resource requests/limits
                          properties:
                            claims:
                              description: |-
                                Claims lists the names of resources, defined in spec.resourceClaims,
                                that are used by this container.
                                
                                This is an alpha field and requires enabling the
                                DynamicResourceAllocation feature gate.
                                
                                This field is immutable. It can only be set for containers.
                              items:
                                description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                                properties:
                                  name:
                                    description: |-
                                      Name must match the name of one entry in pod.spec.resourceClaims of
                                      the Pod where this field is used. It makes that resource available
                                      inside a container.
                                    type: string
                                  request:
                                    description: |-
                                      Request is the name chosen for a request in the referenced claim.
                                      If empty, everything from the claim is made available, otherwise
                                      only the result of this request.
                                    type: string
                                required:
                                  - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                                - name
                              x-kubernetes-list-type: map
                            limits:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: |-
                                Limits describes the maximum amount of compute resources allowed.
                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: |-
                                Requests describes the minimum amount of compute resources required.
                                If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                              type: object
                          type: object
                      type: object
                  type: object
                ipFamilyPrefer:
                  description: Network family preference for brokers
                  type: string
                kafka:
                  description: Kafka configuration
                  properties:
                    authorization:
                      description: Authorization configuration for brokers
                      properties:
                        superUsers:
                          description: |-
                            SuperUsers field lists the Kafka users that will be super users
                            and have all broker permissions
                          items:
                            type: string
                          type: array
                        type:
                          enum:
                            - simple
                          type: string
                      required:
                        - type
                      type: object
                    jvmOptions:
                      description: JVM options such as Xms and Xmx for Kafka brokers.
                      properties:
                        -Xms:
                          description: The Xms field sets the JVM min heap size parameter
                          type: string
                        -Xmx:
                          description: The Xmx field sets the JVM max heap size parameter
                          type: string
                      type: object
                    listeners:
                      description: Kafka brokers listeners configuration
                      properties:
                        external:
                          description: External listener for routes to bootstrap brokers.
                          properties:
                            authentication:
                              description: |-
                                Authentication field defines the authentication configuration
                                for ExternalListener.
                              properties:
                                type:
                                  description: Type field defines the authentication
                                    type for listeners
                                  enum:
                                    - tls
                                    - scram-sha-512
                                  type: string
                              required:
                                - type
                              type: object
                            overrides:
                              description: |-
                                Overrides defines how to override defaults for external brokers
                                and bootstrap broker
                              properties:
                                bootstrap:
                                  description: |-
                                    Bootstrap defines configurations specific to the bootstrap svc
                                    that override the default configs.
                                  properties:
                                    nodePort:
                                      description: NodePort defines the port to expose
                                        broker listener
                                      type: integer
                                  type: object
                                brokers:
                                  description: |-
                                    Brokers field defines configurations that override the defaults
                                    for each external broker individually.
                                  items:
                                    properties:
                                      advertisedHost:
                                        description: AdvertisedHost is the host reachable
                                          from outside the cluster
                                        type: string
                                      advertisedPort:
                                        description: AdvertisedPort is the port reachable
                                          from outside the cluster
                                        type: integer
                                      broker:
                                        description: broker ID
                                        type: integer
                                      nodePort:
                                        description: NodePort exposes the broker port
                                        type: integer
                                    required:
                                      - broker
                                    type: object
                                  type: array
                              type: object
                            tls:
                              description: Tls field defines whether to use TLS encryption
                                or not
                              type: boolean
                            type:
                              description: Type field defines the connection type
                              type: string
                          required:
                            - tls
                            - type
                          type: object
                        plain:
                          description: Plain listener configuration (unencrypted).
                          properties:
                            authentication:
                              description: |-
                                Authentication field defines the authentication configuration
                                that will be used for PlainListener.
                              properties:
                                type:
                                  description: Type field defines the authentication
                                    type for listeners
                                  enum:
                                    - tls
                                    - scram-sha-512
                                  type: string
                              required:
                                - type
                              type: object
                          type: object
                        tls:
                          description: TLS listener configuration (encrypted).
                          properties:
                            authentication:
                              description: |-
                                Authentication field defines the authentication configuration
                                that will be used for TlsListener.
                              properties:
                                type:
                                  description: Type field defines the authentication
                                    type for listeners
                                  enum:
                                    - tls
                                    - scram-sha-512
                                  type: string
                              required:
                                - type
                              type: object
                          type: object
                      type: object
                    logging:
                      description: Logging configuration for Kafka.
                      properties:
                        loggers:
                          additionalProperties:
                            type: string
                          description: Loggers is a map from logger name to logger level.
                          type: object
                        type:
                          description: Logging type , it must have the value inline
                          type: string
                      required:
                        - loggers
                        - type
                      type: object
                    template:
                      description: Pod template for brokers
                      properties:
                        pod:
                          description: |-
                            Pod template for containers in the pod.
                            Contains security context, affinity and tolerations settings.
                          properties:
                            affinity:
                              description: Affinity and anti-affinity rules for pod
                                scheduling.
                              properties:
                                nodeAffinity:
                                  description: Describes node affinity scheduling rules
                                    for the pod.
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      description: |-
                                        The scheduler will prefer to schedule pods to nodes that satisfy
                                        the affinity expressions specified by this field, but it may choose
                                        a node that violates one or more of the expressions. The node that is
                                        most preferred is the one with the greatest sum of weights, i.e.
                                        for each node that meets all of the scheduling requirements (resource
                                        request, requiredDuringScheduling affinity expressions, etc.),
                                        compute a sum by iterating through the elements of this field and adding
                                        "weight" to the sum if the node matches the corresponding matchExpressions; the
                                        node(s) with the highest sum are the most preferred.
                                      items:
                                        description: |-
                                          An empty preferred scheduling term matches all objects with implicit weight 0
                                          (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                                        properties:
                                          preference:
                                            description: A node selector term, associated
                                              with the corresponding weight.
                                            properties:
                                              matchExpressions:
                                                description: A list of node selector
                                                  requirements by node's labels.
                                                items:
                                                  description: |-
                                                    A node selector requirement is a selector that contains values, a key, and an operator
                                                    that relates the key and values.
                                                  properties:
                                                    key:
                                                      description: The label key that
                                                        the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        Represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        An array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. If the operator is Gt or Lt, the values
                                                        array must have a single element, which will be interpreted as an integer.
                                                        This array is replaced during a strategic merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                    - key
                                                    - operator
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              matchFields:
                                                description: A list of node selector
                                                  requirements by node's fields.
                                                items:
                                                  description: |-
                                                    A node selector requirement is a selector that contains values, a key, and an operator
                                                    that relates the key and values.
                                                  properties:
                                                    key:
                                                      description: The label key that
                                                        the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        Represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        An array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. If the operator is Gt or Lt, the values
                                                        array must have a single element, which will be interpreted as an integer.
                                                        This array is replaced during a strategic merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                    - key
                                                    - operator
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          weight:
                                            description: Weight associated with matching
                                              the corresponding nodeSelectorTerm, in
                                              the range 1-100.
                                            format: int32
                                            type: integer
                                        required:
                                          - preference
                                          - weight
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      description: |-
                                        If the affinity requirements specified by this field are not met at
                                        scheduling time, the pod will not be scheduled onto the node.
                                        If the affinity requirements specified by this field cease to be met
                                        at some point during pod execution (e.g. due to an update), the system
                                        may or may not try to eventually evict the pod from its node.
                                      properties:
                                        nodeSelectorTerms:
                                          description: Required. A list of node selector
                                            terms. The terms are ORed.
                                          items:
                                            description: |-
                                              A null or empty node selector term matches no objects. The requirements of
                                              them are ANDed.
                                              The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                            properties:
                                              matchExpressions:
                                                description: A list of node selector
                                                  requirements by node's labels.
                                                items:
                                                  description: |-
                                                    A node selector requirement is a selector that contains values, a key, and an operator
                                                    that relates the key and values.
                                                  properties:
                                                    key:
                                                      description: The label key that
                                                        the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        Represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        An array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. If the operator is Gt or Lt, the values
                                                        array must have a single element, which will be interpreted as an integer.
                                                        This array is replaced during a strategic merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                    - key
                                                    - operator
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              matchFields:
                                                description: A list of node selector
                                                  requirements by node's fields.
                                                items:
                                                  description: |-
                                                    A node selector requirement is a selector that contains values, a key, and an operator
                                                    that relates the key and values.
                                                  properties:
                                                    key:
                                                      description: The label key that
                                                        the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        Represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        An array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. If the operator is Gt or Lt, the values
                                                        array must have a single element, which will be interpreted as an integer.
                                                        This array is replaced during a strategic merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                    - key
                                                    - operator
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      required:
                                        - nodeSelectorTerms
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                podAffinity:
                                  description: Describes pod affinity scheduling rules
                                    (e.g. co-locate this pod in the same node, zone,
                                    etc. as some other pod(s)).
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      description: |-
                                        The scheduler will prefer to schedule pods to nodes that satisfy
                                        the affinity expressions specified by this field, but it may choose
                                        a node that violates one or more of the expressions. The node that is
                                        most preferred is the one with the greatest sum of weights, i.e.
                                        for each node that meets all of the scheduling requirements (resource
                                        request, requiredDuringScheduling affinity expressions, etc.),
                                        compute a sum by iterating through the elements of this field and adding
                                        "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                        node(s) with the highest sum are the most preferred.
                                      items:
                                        description: The weights of all of the matched
                                          WeightedPodAffinityTerm fields are added per-node
                                          to find the most preferred node(s)
                                        properties:
                                          podAffinityTerm:
                                            description: Required. A pod affinity term,
                                              associated with the corresponding weight.
                                            properties:
                                              labelSelector:
                                                description: |-
                                                  A label query over a set of resources, in this case pods.
                                                  If it's null, this PodAffinityTerm matches with no Pods.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions is
                                                      a list of label selector requirements.
                                                      The requirements are ANDed.
                                                    items:
                                                      description: |-
                                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                                        relates the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the label
                                                            key that the selector applies
                                                            to.
                                                          type: string
                                                        operator:
                                                          description: |-
                                                            operator represents a key's relationship to a set of values.
                                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: |-
                                                            values is an array of string values. If the operator is In or NotIn,
                                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                            the values array must be empty. This array is replaced during a strategic
                                                            merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                      required:
                                                        - key
                                                        - operator
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: |-
                                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                    type: object
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              matchLabelKeys:
                                                description: |-
                                                  MatchLabelKeys is a set of pod label keys to select which pods will
                                                  be taken into consideration. The keys are used to lookup values from the
                                                  incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                  to select the group of existing pods which pods will be taken into consideration
                                                  for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                  pod labels will be ignored. The default value is empty.
                                                  The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                  Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                  This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              mismatchLabelKeys:
                                                description: |-
                                                  MismatchLabelKeys is a set of pod label keys to select which pods will
                                                  be taken into consideration. The keys are used to lookup values from the
                                                  incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                  to select the group of existing pods which pods will be taken into consideration
                                                  for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                  pod labels will be ignored. The default value is empty.
                                                  The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                  Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                  This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              namespaceSelector:
                                                description: |-
                                                  A label query over the set of namespaces that the term applies to.
                                                  The term is applied to the union of the namespaces selected by this field
                                                  and the ones listed in the namespaces field.
                                                  null selector and null or empty namespaces list means "this pod's namespace".
                                                  An empty selector ({}) matches all namespaces.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions is
                                                      a list of label selector requirements.
                                                      The requirements are ANDed.
                                                    items:
                                                      description: |-
                                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                                        relates the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the label
                                                            key that the selector applies
                                                            to.
                                                          type: string
                                                        operator:
                                                          description: |-
                                                            operator represents a key's relationship to a set of values.
                                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: |-
                                                            values is an array of string values. If the operator is In or NotIn,
                                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                            the values array must be empty. This array is replaced during a strategic
                                                            merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                      required:
                                                        - key
                                                        - operator
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: |-
                                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                    type: object
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              namespaces:
                                                description: |-
                                                  namespaces specifies a static list of namespace names that the term applies to.
                                                  The term is applied to the union of the namespaces listed in this field
                                                  and the ones selected by namespaceSelector.
                                                  null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              topologyKey:
                                                description: |-
                                                  This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                  the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                  whose value of the label with key topologyKey matches that of any node on which any of the
                                                  selected pods is running.
                                                  Empty topologyKey is not allowed.
                                                type: string
                                            required:
                                              - topologyKey
                                            type: object
                                          weight:
                                            description: |-
                                              weight associated with matching the corresponding podAffinityTerm,
                                              in the range 1-100.
                                            format: int32
                                            type: integer
                                        required:
                                          - podAffinityTerm
                                          - weight
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      description: |-
                                        If the affinity requirements specified by this field are not met at
                                        scheduling time, the pod will not be scheduled onto the node.
                                        If the affinity requirements specified by this field cease to be met
                                        at some point during pod execution (e.g. due to a pod label update), the
                                        system may or may not try to eventually evict the pod from its node.
                                        When there are multiple elements, the lists of nodes corresponding to each
                                        podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                      items:
                                        description: |-
                                          Defines a set of pods (namely those matching the labelSelector
                                          relative to the given namespace(s)) that this pod should be
                                          co-located (affinity) or not co-located (anti-affinity) with,
                                          where co-located is defined as running on a node whose value of
                                          the label with key <topologyKey> matches that of any node on which
                                          a pod of the set of pods is running
                                        properties:
                                          labelSelector:
                                            description: |-
                                              A label query over a set of resources, in this case pods.
                                              If it's null, this PodAffinityTerm matches with no Pods.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a list
                                                  of label selector requirements. The
                                                  requirements are ANDed.
                                                items:
                                                  description: |-
                                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                                    relates the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        operator represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        values is an array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. This array is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                    - key
                                                    - operator
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: |-
                                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                type: object
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          matchLabelKeys:
                                            description: |-
                                              MatchLabelKeys is a set of pod label keys to select which pods will
                                              be taken into consideration. The keys are used to lookup values from the
                                              incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                              to select the group of existing pods which pods will be taken into consideration
                                              for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                              pod labels will be ignored. The default value is empty.
                                              The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                              Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                              This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          mismatchLabelKeys:
                                            description: |-
                                              MismatchLabelKeys is a set of pod label keys to select which pods will
                                              be taken into consideration. The keys are used to lookup values from the
                                              incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                              to select the group of existing pods which pods will be taken into consideration
                                              for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                              pod labels will be ignored. The default value is empty.
                                              The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                              Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                              This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          namespaceSelector:
                                            description: |-
                                              A label query over the set of namespaces that the term applies to.
                                              The term is applied to the union of the namespaces selected by this field
                                              and the ones listed in the namespaces field.
                                              null selector and null or empty namespaces list means "this pod's namespace".
                                              An empty selector ({}) matches all namespaces.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a list
                                                  of label selector requirements. The
                                                  requirements are ANDed.
                                                items:
                                                  description: |-
                                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                                    relates the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        operator represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        values is an array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. This array is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                    - key
                                                    - operator
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: |-
                                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                type: object
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          namespaces:
                                            description: |-
                                              namespaces specifies a static list of namespace names that the term applies to.
                                              The term is applied to the union of the namespaces listed in this field
                                              and the ones selected by namespaceSelector.
                                              null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          topologyKey:
                                            description: |-
                                              This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                              the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                              whose value of the label with key topologyKey matches that of any node on which any of the
                                              selected pods is running.
                                              Empty topologyKey is not allowed.
                                            type: string
                                        required:
                                          - topologyKey
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  type: object
                                podAntiAffinity:
                                  description: Describes pod anti-affinity scheduling
                                    rules (e.g. avoid putting this pod in the same node,
                                    zone, etc. as some other pod(s)).
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      description: |-
                                        The scheduler will prefer to schedule pods to nodes that satisfy
                                        the anti-affinity expressions specified by this field, but it may choose
                                        a node that violates one or more of the expressions. The node that is
                                        most preferred is the one with the greatest sum of weights, i.e.
                                        for each node that meets all of the scheduling requirements (resource
                                        request, requiredDuringScheduling anti-affinity expressions, etc.),
                                        compute a sum by iterating through the elements of this field and adding
                                        "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                        node(s) with the highest sum are the most preferred.
                                      items:
                                        description: The weights of all of the matched
                                          WeightedPodAffinityTerm fields are added per-node
                                          to find the most preferred node(s)
                                        properties:
                                          podAffinityTerm:
                                            description: Required. A pod affinity term,
                                              associated with the corresponding weight.
                                            properties:
                                              labelSelector:
                                                description: |-
                                                  A label query over a set of resources, in this case pods.
                                                  If it's null, this PodAffinityTerm matches with no Pods.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions is
                                                      a list of label selector requirements.
                                                      The requirements are ANDed.
                                                    items:
                                                      description: |-
                                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                                        relates the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the label
                                                            key that the selector applies
                                                            to.
                                                          type: string
                                                        operator:
                                                          description: |-
                                                            operator represents a key's relationship to a set of values.
                                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: |-
                                                            values is an array of string values. If the operator is In or NotIn,
                                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                            the values array must be empty. This array is replaced during a strategic
                                                            merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                      required:
                                                        - key
                                                        - operator
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: |-
                                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                    type: object
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              matchLabelKeys:
                                                description: |-
                                                  MatchLabelKeys is a set of pod label keys to select which pods will
                                                  be taken into consideration. The keys are used to lookup values from the
                                                  incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                  to select the group of existing pods which pods will be taken into consideration
                                                  for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                  pod labels will be ignored. The default value is empty.
                                                  The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                  Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                  This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              mismatchLabelKeys:
                                                description: |-
                                                  MismatchLabelKeys is a set of pod label keys to select which pods will
                                                  be taken into consideration. The keys are used to lookup values from the
                                                  incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                  to select the group of existing pods which pods will be taken into consideration
                                                  for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                  pod labels will be ignored. The default value is empty.
                                                  The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                  Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                  This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              namespaceSelector:
                                                description: |-
                                                  A label query over the set of namespaces that the term applies to.
                                                  The term is applied to the union of the namespaces selected by this field
                                                  and the ones listed in the namespaces field.
                                                  null selector and null or empty namespaces list means "this pod's namespace".
                                                  An empty selector ({}) matches all namespaces.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions is
                                                      a list of label selector requirements.
                                                      The requirements are ANDed.
                                                    items:
                                                      description: |-
                                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                                        relates the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the label
                                                            key that the selector applies
                                                            to.
                                                          type: string
                                                        operator:
                                                          description: |-
                                                            operator represents a key's relationship to a set of values.
                                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: |-
                                                            values is an array of string values. If the operator is In or NotIn,
                                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                            the values array must be empty. This array is replaced during a strategic
                                                            merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                      required:
                                                        - key
                                                        - operator
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: |-
                                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                    type: object
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              namespaces:
                                                description: |-
                                                  namespaces specifies a static list of namespace names that the term applies to.
                                                  The term is applied to the union of the namespaces listed in this field
                                                  and the ones selected by namespaceSelector.
                                                  null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              topologyKey:
                                                description: |-
                                                  This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                  the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                  whose value of the label with key topologyKey matches that of any node on which any of the
                                                  selected pods is running.
                                                  Empty topologyKey is not allowed.
                                                type: string
                                            required:
                                              - topologyKey
                                            type: object
                                          weight:
                                            description: |-
                                              weight associated with matching the corresponding podAffinityTerm,
                                              in the range 1-100.
                                            format: int32
                                            type: integer
                                        required:
                                          - podAffinityTerm
                                          - weight
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      description: |-
                                        If the anti-affinity requirements specified by this field are not met at
                                        scheduling time, the pod will not be scheduled onto the node.
                                        If the anti-affinity requirements specified by this field cease to be met
                                        at some point during pod execution (e.g. due to a pod label update), the
                                        system may or may not try to eventually evict the pod from its node.
                                        When there are multiple elements, the lists of nodes corresponding to each
                                        podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                      items:
                                        description: |-
                                          Defines a set of pods (namely those matching the labelSelector
                                          relative to the given namespace(s)) that this pod should be
                                          co-located (affinity) or not co-located (anti-affinity) with,
                                          where co-located is defined as running on a node whose value of
                                          the label with key <topologyKey> matches that of any node on which
                                          a pod of the set of pods is running
                                        properties:
                                          labelSelector:
                                            description: |-
                                              A label query over a set of resources, in this case pods.
                                              If it's null, this PodAffinityTerm matches with no Pods.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a list
                                                  of label selector requirements. The
                                                  requirements are ANDed.
                                                items:
                                                  description: |-
                                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                                    relates the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        operator represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        values is an array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. This array is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                    - key
                                                    - operator
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: |-
                                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                type: object
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          matchLabelKeys:
                                            description: |-
                                              MatchLabelKeys is a set of pod label keys to select which pods will
                                              be taken into consideration. The keys are used to lookup values from the
                                              incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                              to select the group of existing pods which pods will be taken into consideration
                                              for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                              pod labels will be ignored. The default value is empty.
                                              The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                              Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                              This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          mismatchLabelKeys:
                                            description: |-
                                              MismatchLabelKeys is a set of pod label keys to select which pods will
                                              be taken into consideration. The keys are used to lookup values from the
                                              incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                              to select the group of existing pods which pods will be taken into consideration
                                              for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                              pod labels will be ignored. The default value is empty.
                                              The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                              Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                              This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          namespaceSelector:
                                            description: |-
                                              A label query over the set of namespaces that the term applies to.
                                              The term is applied to the union of the namespaces selected by this field
                                              and the ones listed in the namespaces field.
                                              null selector and null or empty namespaces list means "this pod's namespace".
                                              An empty selector ({}) matches all namespaces.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a list
                                                  of label selector requirements. The
                                                  requirements are ANDed.
                                                items:
                                                  description: |-
                                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                                    relates the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        operator represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        values is an array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. This array is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                    - key
                                                    - operator
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: |-
                                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                type: object
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          namespaces:
                                            description: |-
                                              namespaces specifies a static list of namespace names that the term applies to.
                                              The term is applied to the union of the namespaces listed in this field
                                              and the ones selected by namespaceSelector.
                                              null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          topologyKey:
                                            description: |-
                                              This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                              the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                              whose value of the label with key topologyKey matches that of any node on which any of the
                                              selected pods is running.
                                              Empty topologyKey is not allowed.
                                            type: string
                                        required:
                                          - topologyKey
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  type: object
                              type: object
                            enableServiceLinks:
                              description: EnableServiceLinks Indicates whether information
                                about services should be injected into Pod’s environment
                                variables.
                              type: boolean
                            securityContext:
                              description: Security context for pods such as permissions
                                and privilege escalation.
                              properties:
                                appArmorProfile:
                                  description: |-
                                    appArmorProfile is the AppArmor options to use by the containers in this pod.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  properties:
                                    localhostProfile:
                                      description: |-
                                        localhostProfile indicates a profile loaded on the node that should be used.
                                        The profile must be preconfigured on the node to work.
                                        Must match the loaded name of the profile.
                                        Must be set if and only if type is "Localhost".
                                      type: string
                                    type:
                                      description: |-
                                        type indicates which kind of AppArmor profile will be applied.
                                        Valid options are:
                                          Localhost - a profile pre-loaded on the node.
                                          RuntimeDefault - the container runtime's default profile.
                                          Unconfined - no AppArmor enforcement.
                                      type: string
                                  required:
                                    - type
                                  type: object
                                fsGroup:
                                  description: |-
                                    A special supplemental group that applies to all containers in a pod.
                                    Some volume types allow the Kubelet to change the ownership of that volume
                                    to be owned by the pod:
                                    
                                    1. The owning GID will be the FSGroup
                                    2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
                                    3. The permission bits are OR'd with rw-rw----
                                    
                                    If unset, the Kubelet will not modify the ownership and permissions of any volume.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  format: int64
                                  type: integer
                                fsGroupChangePolicy:
                                  description: |-
                                    fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
                                    before being exposed inside Pod. This field will only apply to
                                    volume types which support fsGroup based ownership(and permissions).
                                    It will have no effect on ephemeral volume types such as: secret, configmaps
                                    and emptydir.
                                    Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  type: string
                                runAsGroup:
                                  description: |-
                                    The GID to run the entrypoint of the container process.
                                    Uses runtime default if unset.
                                    May also be set in SecurityContext.  If set in both SecurityContext and
                                    PodSecurityContext, the value specified in SecurityContext takes precedence
                                    for that container.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  format: int64
                                  type: integer
                                runAsNonRoot:
                                  description: |-
                                    Indicates that the container must run as a non-root user.
                                    If true, the Kubelet will validate the image at runtime to ensure that it
                                    does not run as UID 0 (root) and fail to start the container if it does.
                                    If unset or false, no such validation will be performed.
                                    May also be set in SecurityContext.  If set in both SecurityContext and
                                    PodSecurityContext, the value specified in SecurityContext takes precedence.
                                  type: boolean
                                runAsUser:
                                  description: |-
                                    The UID to run the entrypoint of the container process.
                                    Defaults to user specified in image metadata if unspecified.
                                    May also be set in SecurityContext.  If set in both SecurityContext and
                                    PodSecurityContext, the value specified in SecurityContext takes precedence
                                    for that container.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  format: int64
                                  type: integer
                                seLinuxChangePolicy:
                                  description: |-
                                    seLinuxChangePolicy defines how the container's SELinux label is applied to all volumes used by the Pod.
                                    It has no effect on nodes that do not support SELinux or to volumes does not support SELinux.
                                    Valid values are "MountOption" and "Recursive".
                                    
                                    "Recursive" means relabeling of all files on all Pod volumes by the container runtime.
                                    This may be slow for large volumes, but allows mixing privileged and unprivileged Pods sharing the same volume on the same node.
                                    
                                    "MountOption" mounts all eligible Pod volumes with `-o context` mount option.
                                    This requires all Pods that share the same volume to use the same SELinux label.
                                    It is not possible to share the same volume among privileged and unprivileged Pods.
                                    Eligible volumes are in-tree FibreChannel and iSCSI volumes, and all CSI volumes
                                    whose CSI driver announces SELinux support by setting spec.seLinuxMount: true in their
                                    CSIDriver instance. Other volumes are always re-labelled recursively.
                                    "MountOption" value is allowed only when SELinuxMount feature gate is enabled.
                                    
                                    If not specified and SELinuxMount feature gate is enabled, "MountOption" is used.
                                    If not specified and SELinuxMount feature gate is disabled, "MountOption" is used for ReadWriteOncePod volumes
                                    and "Recursive" for all other volumes.
                                    
                                    This field affects only Pods that have SELinux label set, either in PodSecurityContext or in SecurityContext of all containers.
                                    
                                    All Pods that use the same volume should use the same seLinuxChangePolicy, otherwise some pods can get stuck in ContainerCreating state.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  type: string
                                seLinuxOptions:
                                  description: |-
                                    The SELinux context to be applied to all containers.
                                    If unspecified, the container runtime will allocate a random SELinux context for each
                                    container.  May also be set in SecurityContext.  If set in
                                    both SecurityContext and PodSecurityContext, the value specified in SecurityContext
                                    takes precedence for that container.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  properties:
                                    level:
                                      description: Level is SELinux level label that
                                        applies to the container.
                                      type: string
                                    role:
                                      description: Role is a SELinux role label that
                                        applies to the container.
                                      type: string
                                    type:
                                      description: Type is a SELinux type label that
                                        applies to the container.
                                      type: string
                                    user:
                                      description: User is a SELinux user label that
                                        applies to the container.
                                      type: string
                                  type: object
                                seccompProfile:
                                  description: |-
                                    The seccomp options to use by the containers in this pod.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  properties:
                                    localhostProfile:
                                      description: |-
                                        localhostProfile indicates a profile defined in a file on the node should be used.
                                        The profile must be preconfigured on the node to work.
                                        Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                        Must be set if type is "Localhost". Must NOT be set for any other type.
                                      type: string
                                    type:
                                      description: |-
                                        type indicates which kind of seccomp profile will be applied.
                                        Valid options are:
                                        
                                        Localhost - a profile defined in a file on the node should be used.
                                        RuntimeDefault - the container runtime default profile should be used.
                                        Unconfined - no profile should be applied.
                                      type: string
                                  required:
                                    - type
                                  type: object
                                supplementalGroups:
                                  description: |-
                                    A list of groups applied to the first process run in each container, in
                                    addition to the container's primary GID and fsGroup (if specified).  If
                                    the SupplementalGroupsPolicy feature is enabled, the
                                    supplementalGroupsPolicy field determines whether these are in addition
                                    to or instead of any group memberships defined in the container image.
                                    If unspecified, no additional groups are added, though group memberships
                                    defined in the container image may still be used, depending on the
                                    supplementalGroupsPolicy field.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  items:
                                    format: int64
                                    type: integer
                                  type: array
                                  x-kubernetes-list-type: atomic
                                supplementalGroupsPolicy:
                                  description: |-
                                    Defines how supplemental groups of the first container processes are calculated.
                                    Valid values are "Merge" and "Strict". If not specified, "Merge" is used.
                                    (Alpha) Using the field requires the SupplementalGroupsPolicy feature gate to be enabled
                                    and the container runtime must implement support for this feature.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  type: string
                                sysctls:
                                  description: |-
                                    Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
                                    sysctls (by the container runtime) might fail to launch.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  items:
                                    description: Sysctl defines a kernel parameter to
                                      be set
                                    properties:
                                      name:
                                        description: Name of a property to set
                                        type: string
                                      value:
                                        description: Value of a property to set
                                        type: string
                                    required:
                                      - name
                                      - value
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                windowsOptions:
                                  description: |-
                                    The Windows specific settings applied to all containers.
                                    If unspecified, the options within a container's SecurityContext will be used.
                                    If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                    Note that this field cannot be set when spec.os.name is linux.
                                  properties:
                                    gmsaCredentialSpec:
                                      description: |-
                                        GMSACredentialSpec is where the GMSA admission webhook
                                        (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                        GMSA credential spec named by the GMSACredentialSpecName field.
                                      type: string
                                    gmsaCredentialSpecName:
                                      description: GMSACredentialSpecName is the name
                                        of the GMSA credential spec to use.
                                      type: string
                                    hostProcess:
                                      description: |-
                                        HostProcess determines if a container should be run as a 'Host Process' container.
                                        All of a Pod's containers must have the same effective HostProcess value
                                        (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                        In addition, if HostProcess is true then HostNetwork must also be set to true.
                                      type: boolean
                                    runAsUserName:
                                      description: |-
                                        The UserName in Windows to run the entrypoint of the container process.
                                        Defaults to the user specified in image metadata if unspecified.
                                        May also be set in PodSecurityContext. If set in both SecurityContext and
                                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                                      type: string
                                  type: object
                              type: object
                            tolerations:
                              description: Tolerations for pods to schedule onto nodes
                                with taints.
                              items:
                                description: |-
                                  The pod this Toleration is attached to tolerates any taint that matches
                                  the triple <key,value,effect> using the matching operator <operator>.
                                properties:
                                  effect:
                                    description: |-
                                      Effect indicates the taint effect to match. Empty means match all taint effects.
                                      When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                    type: string
                                  key:
                                    description: |-
                                      Key is the taint key that the toleration applies to. Empty means match all taint keys.
                                      If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                    type: string
                                  operator:
                                    description: |-
                                      Operator represents a key's relationship to the value.
                                      Valid operators are Exists and Equal. Defaults to Equal.
                                      Exists is equivalent to wildcard for value, so that a pod can
                                      tolerate all taints of a particular category.
                                    type: string
                                  tolerationSeconds:
                                    description: |-
                                      TolerationSeconds represents the period of time the toleration (which must be
                                      of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                                      it is not set, which means tolerate the taint forever (do not evict). Zero and
                                      negative values will be treated as 0 (evict immediately) by the system.
                                    format: int64
                                    type: integer
                                  value:
                                    description: |-
                                      Value is the taint value the toleration matches to.
                                      If the operator is Exists, the value should be empty, otherwise just a regular string.
                                    type: string
                                type: object
                              type: array
                          type: object
                      type: object
                  required:
                    - listeners
                  type: object
                kafkaExporter:
                  description: Kafka exporter configuration
                  properties:
                    groupRegex:
                      description: The GroupRegex field specifies regex for scraping
                        metrics from consumer groups
                      type: string
                    resources:
                      description: Resources defines CPU/memory resource requests/limits
                      properties:
                        claims:
                          description: |-
                            Claims lists the names of resources, defined in spec.resourceClaims,
                            that are used by this container.
                            
                            This is an alpha field and requires enabling the
                            DynamicResourceAllocation feature gate.
                            
                            This field is immutable. It can only be set for containers.
                          items:
                            description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                            properties:
                              name:
                                description: |-
                                  Name must match the name of one entry in pod.spec.resourceClaims of
                                  the Pod where this field is used. It makes that resource available
                                  inside a container.
                                type: string
                              request:
                                description: |-
                                  Request is the name chosen for a request in the referenced claim.
                                  If empty, everything from the claim is made available, otherwise
                                  only the result of this request.
                                type: string
                            required:
                              - name
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                            - name
                          x-kubernetes-list-type: map
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: |-
                            Limits describes the maximum amount of compute resources allowed.
                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: |-
                            Requests describes the minimum amount of compute resources required.
                            If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                            otherwise to an implementation-defined value. Requests cannot exceed Limits.
                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                      type: object
                    template:
                      description: The Template field customizes the pod configuration
                        by applying a PodTemplate
                      properties:
                        pod:
                          description: |-
                            Pod template for containers in the pod.
                            Contains security context, affinity and tolerations settings.
                          properties:
                            affinity:
                              description: Affinity and anti-affinity rules for pod
                                scheduling.
                              properties:
                                nodeAffinity:
                                  description: Describes node affinity scheduling rules
                                    for the pod.
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      description: |-
                                        The scheduler will prefer to schedule pods to nodes that satisfy
                                        the affinity expressions specified by this field, but it may choose
                                        a node that violates one or more of the expressions. The node that is
                                        most preferred is the one with the greatest sum of weights, i.e.
                                        for each node that meets all of the scheduling requirements (resource
                                        request, requiredDuringScheduling affinity expressions, etc.),
                                        compute a sum by iterating through the elements of this field and adding
                                        "weight" to the sum if the node matches the corresponding matchExpressions; the
                                        node(s) with the highest sum are the most preferred.
                                      items:
                                        description: |-
                                          An empty preferred scheduling term matches all objects with implicit weight 0
                                          (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                                        properties:
                                          preference:
                                            description: A node selector term, associated
                                              with the corresponding weight.
                                            properties:
                                              matchExpressions:
                                                description: A list of node selector
                                                  requirements by node's labels.
                                                items:
                                                  description: |-
                                                    A node selector requirement is a selector that contains values, a key, and an operator
                                                    that relates the key and values.
                                                  properties:
                                                    key:
                                                      description: The label key that
                                                        the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        Represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        An array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. If the operator is Gt or Lt, the values
                                                        array must have a single element, which will be interpreted as an integer.
                                                        This array is replaced during a strategic merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                    - key
                                                    - operator
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              matchFields:
                                                description: A list of node selector
                                                  requirements by node's fields.
                                                items:
                                                  description: |-
                                                    A node selector requirement is a selector that contains values, a key, and an operator
                                                    that relates the key and values.
                                                  properties:
                                                    key:
                                                      description: The label key that
                                                        the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        Represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        An array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. If the operator is Gt or Lt, the values
                                                        array must have a single element, which will be interpreted as an integer.
                                                        This array is replaced during a strategic merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                    - key
                                                    - operator
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          weight:
                                            description: Weight associated with matching
                                              the corresponding nodeSelectorTerm, in
                                              the range 1-100.
                                            format: int32
                                            type: integer
                                        required:
                                          - preference
                                          - weight
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      description: |-
                                        If the affinity requirements specified by this field are not met at
                                        scheduling time, the pod will not be scheduled onto the node.
                                        If the affinity requirements specified by this field cease to be met
                                        at some point during pod execution (e.g. due to an update), the system
                                        may or may not try to eventually evict the pod from its node.
                                      properties:
                                        nodeSelectorTerms:
                                          description: Required. A list of node selector
                                            terms. The terms are ORed.
                                          items:
                                            description: |-
                                              A null or empty node selector term matches no objects. The requirements of
                                              them are ANDed.
                                              The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                            properties:
                                              matchExpressions:
                                                description: A list of node selector
                                                  requirements by node's labels.
                                                items:
                                                  description: |-
                                                    A node selector requirement is a selector that contains values, a key, and an operator
                                                    that relates the key and values.
                                                  properties:
                                                    key:
                                                      description: The label key that
                                                        the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        Represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        An array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. If the operator is Gt or Lt, the values
                                                        array must have a single element, which will be interpreted as an integer.
                                                        This array is replaced during a strategic merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                    - key
                                                    - operator
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              matchFields:
                                                description: A list of node selector
                                                  requirements by node's fields.
                                                items:
                                                  description: |-
                                                    A node selector requirement is a selector that contains values, a key, and an operator
                                                    that relates the key and values.
                                                  properties:
                                                    key:
                                                      description: The label key that
                                                        the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        Represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        An array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. If the operator is Gt or Lt, the values
                                                        array must have a single element, which will be interpreted as an integer.
                                                        This array is replaced during a strategic merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                    - key
                                                    - operator
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      required:
                                        - nodeSelectorTerms
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                podAffinity:
                                  description: Describes pod affinity scheduling rules
                                    (e.g. co-locate this pod in the same node, zone,
                                    etc. as some other pod(s)).
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      description: |-
                                        The scheduler will prefer to schedule pods to nodes that satisfy
                                        the affinity expressions specified by this field, but it may choose
                                        a node that violates one or more of the expressions. The node that is
                                        most preferred is the one with the greatest sum of weights, i.e.
                                        for each node that meets all of the scheduling requirements (resource
                                        request, requiredDuringScheduling affinity expressions, etc.),
                                        compute a sum by iterating through the elements of this field and adding
                                        "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                        node(s) with the highest sum are the most preferred.
                                      items:
                                        description: The weights of all of the matched
                                          WeightedPodAffinityTerm fields are added per-node
                                          to find the most preferred node(s)
                                        properties:
                                          podAffinityTerm:
                                            description: Required. A pod affinity term,
                                              associated with the corresponding weight.
                                            properties:
                                              labelSelector:
                                                description: |-
                                                  A label query over a set of resources, in this case pods.
                                                  If it's null, this PodAffinityTerm matches with no Pods.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions is
                                                      a list of label selector requirements.
                                                      The requirements are ANDed.
                                                    items:
                                                      description: |-
                                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                                        relates the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the label
                                                            key that the selector applies
                                                            to.
                                                          type: string
                                                        operator:
                                                          description: |-
                                                            operator represents a key's relationship to a set of values.
                                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: |-
                                                            values is an array of string values. If the operator is In or NotIn,
                                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                            the values array must be empty. This array is replaced during a strategic
                                                            merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                      required:
                                                        - key
                                                        - operator
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: |-
                                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                    type: object
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              matchLabelKeys:
                                                description: |-
                                                  MatchLabelKeys is a set of pod label keys to select which pods will
                                                  be taken into consideration. The keys are used to lookup values from the
                                                  incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                  to select the group of existing pods which pods will be taken into consideration
                                                  for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                  pod labels will be ignored. The default value is empty.
                                                  The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                  Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                  This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              mismatchLabelKeys:
                                                description: |-
                                                  MismatchLabelKeys is a set of pod label keys to select which pods will
                                                  be taken into consideration. The keys are used to lookup values from the
                                                  incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                  to select the group of existing pods which pods will be taken into consideration
                                                  for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                  pod labels will be ignored. The default value is empty.
                                                  The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                  Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                  This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              namespaceSelector:
                                                description: |-
                                                  A label query over the set of namespaces that the term applies to.
                                                  The term is applied to the union of the namespaces selected by this field
                                                  and the ones listed in the namespaces field.
                                                  null selector and null or empty namespaces list means "this pod's namespace".
                                                  An empty selector ({}) matches all namespaces.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions is
                                                      a list of label selector requirements.
                                                      The requirements are ANDed.
                                                    items:
                                                      description: |-
                                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                                        relates the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the label
                                                            key that the selector applies
                                                            to.
                                                          type: string
                                                        operator:
                                                          description: |-
                                                            operator represents a key's relationship to a set of values.
                                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: |-
                                                            values is an array of string values. If the operator is In or NotIn,
                                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                            the values array must be empty. This array is replaced during a strategic
                                                            merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                      required:
                                                        - key
                                                        - operator
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: |-
                                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                    type: object
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              namespaces:
                                                description: |-
                                                  namespaces specifies a static list of namespace names that the term applies to.
                                                  The term is applied to the union of the namespaces listed in this field
                                                  and the ones selected by namespaceSelector.
                                                  null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              topologyKey:
                                                description: |-
                                                  This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                  the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                  whose value of the label with key topologyKey matches that of any node on which any of the
                                                  selected pods is running.
                                                  Empty topologyKey is not allowed.
                                                type: string
                                            required:
                                              - topologyKey
                                            type: object
                                          weight:
                                            description: |-
                                              weight associated with matching the corresponding podAffinityTerm,
                                              in the range 1-100.
                                            format: int32
                                            type: integer
                                        required:
                                          - podAffinityTerm
                                          - weight
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      description: |-
                                        If the affinity requirements specified by this field are not met at
                                        scheduling time, the pod will not be scheduled onto the node.
                                        If the affinity requirements specified by this field cease to be met
                                        at some point during pod execution (e.g. due to a pod label update), the
                                        system may or may not try to eventually evict the pod from its node.
                                        When there are multiple elements, the lists of nodes corresponding to each
                                        podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                      items:
                                        description: |-
                                          Defines a set of pods (namely those matching the labelSelector
                                          relative to the given namespace(s)) that this pod should be
                                          co-located (affinity) or not co-located (anti-affinity) with,
                                          where co-located is defined as running on a node whose value of
                                          the label with key <topologyKey> matches that of any node on which
                                          a pod of the set of pods is running
                                        properties:
                                          labelSelector:
                                            description: |-
                                              A label query over a set of resources, in this case pods.
                                              If it's null, this PodAffinityTerm matches with no Pods.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a list
                                                  of label selector requirements. The
                                                  requirements are ANDed.
                                                items:
                                                  description: |-
                                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                                    relates the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        operator represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        values is an array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. This array is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                    - key
                                                    - operator
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: |-
                                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                type: object
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          matchLabelKeys:
                                            description: |-
                                              MatchLabelKeys is a set of pod label keys to select which pods will
                                              be taken into consideration. The keys are used to lookup values from the
                                              incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                              to select the group of existing pods which pods will be taken into consideration
                                              for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                              pod labels will be ignored. The default value is empty.
                                              The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                              Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                              This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          mismatchLabelKeys:
                                            description: |-
                                              MismatchLabelKeys is a set of pod label keys to select which pods will
                                              be taken into consideration. The keys are used to lookup values from the
                                              incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                              to select the group of existing pods which pods will be taken into consideration
                                              for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                              pod labels will be ignored. The default value is empty.
                                              The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                              Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                              This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          namespaceSelector:
                                            description: |-
                                              A label query over the set of namespaces that the term applies to.
                                              The term is applied to the union of the namespaces selected by this field
                                              and the ones listed in the namespaces field.
                                              null selector and null or empty namespaces list means "this pod's namespace".
                                              An empty selector ({}) matches all namespaces.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a list
                                                  of label selector requirements. The
                                                  requirements are ANDed.
                                                items:
                                                  description: |-
                                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                                    relates the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        operator represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        values is an array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. This array is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                    - key
                                                    - operator
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: |-
                                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                type: object
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          namespaces:
                                            description: |-
                                              namespaces specifies a static list of namespace names that the term applies to.
                                              The term is applied to the union of the namespaces listed in this field
                                              and the ones selected by namespaceSelector.
                                              null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          topologyKey:
                                            description: |-
                                              This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                              the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                              whose value of the label with key topologyKey matches that of any node on which any of the
                                              selected pods is running.
                                              Empty topologyKey is not allowed.
                                            type: string
                                        required:
                                          - topologyKey
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  type: object
                                podAntiAffinity:
                                  description: Describes pod anti-affinity scheduling
                                    rules (e.g. avoid putting this pod in the same node,
                                    zone, etc. as some other pod(s)).
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      description: |-
                                        The scheduler will prefer to schedule pods to nodes that satisfy
                                        the anti-affinity expressions specified by this field, but it may choose
                                        a node that violates one or more of the expressions. The node that is
                                        most preferred is the one with the greatest sum of weights, i.e.
                                        for each node that meets all of the scheduling requirements (resource
                                        request, requiredDuringScheduling anti-affinity expressions, etc.),
                                        compute a sum by iterating through the elements of this field and adding
                                        "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                        node(s) with the highest sum are the most preferred.
                                      items:
                                        description: The weights of all of the matched
                                          WeightedPodAffinityTerm fields are added per-node
                                          to find the most preferred node(s)
                                        properties:
                                          podAffinityTerm:
                                            description: Required. A pod affinity term,
                                              associated with the corresponding weight.
                                            properties:
                                              labelSelector:
                                                description: |-
                                                  A label query over a set of resources, in this case pods.
                                                  If it's null, this PodAffinityTerm matches with no Pods.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions is
                                                      a list of label selector requirements.
                                                      The requirements are ANDed.
                                                    items:
                                                      description: |-
                                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                                        relates the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the label
                                                            key that the selector applies
                                                            to.
                                                          type: string
                                                        operator:
                                                          description: |-
                                                            operator represents a key's relationship to a set of values.
                                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: |-
                                                            values is an array of string values. If the operator is In or NotIn,
                                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                            the values array must be empty. This array is replaced during a strategic
                                                            merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                      required:
                                                        - key
                                                        - operator
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: |-
                                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                    type: object
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              matchLabelKeys:
                                                description: |-
                                                  MatchLabelKeys is a set of pod label keys to select which pods will
                                                  be taken into consideration. The keys are used to lookup values from the
                                                  incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                  to select the group of existing pods which pods will be taken into consideration
                                                  for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                  pod labels will be ignored. The default value is empty.
                                                  The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                  Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                  This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              mismatchLabelKeys:
                                                description: |-
                                                  MismatchLabelKeys is a set of pod label keys to select which pods will
                                                  be taken into consideration. The keys are used to lookup values from the
                                                  incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                  to select the group of existing pods which pods will be taken into consideration
                                                  for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                  pod labels will be ignored. The default value is empty.
                                                  The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                  Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                  This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              namespaceSelector:
                                                description: |-
                                                  A label query over the set of namespaces that the term applies to.
                                                  The term is applied to the union of the namespaces selected by this field
                                                  and the ones listed in the namespaces field.
                                                  null selector and null or empty namespaces list means "this pod's namespace".
                                                  An empty selector ({}) matches all namespaces.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions is
                                                      a list of label selector requirements.
                                                      The requirements are ANDed.
                                                    items:
                                                      description: |-
                                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                                        relates the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the label
                                                            key that the selector applies
                                                            to.
                                                          type: string
                                                        operator:
                                                          description: |-
                                                            operator represents a key's relationship to a set of values.
                                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: |-
                                                            values is an array of string values. If the operator is In or NotIn,
                                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                            the values array must be empty. This array is replaced during a strategic
                                                            merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                      required:
                                                        - key
                                                        - operator
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: |-
                                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                    type: object
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              namespaces:
                                                description: |-
                                                  namespaces specifies a static list of namespace names that the term applies to.
                                                  The term is applied to the union of the namespaces listed in this field
                                                  and the ones selected by namespaceSelector.
                                                  null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              topologyKey:
                                                description: |-
                                                  This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                  the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                  whose value of the label with key topologyKey matches that of any node on which any of the
                                                  selected pods is running.
                                                  Empty topologyKey is not allowed.
                                                type: string
                                            required:
                                              - topologyKey
                                            type: object
                                          weight:
                                            description: |-
                                              weight associated with matching the corresponding podAffinityTerm,
                                              in the range 1-100.
                                            format: int32
                                            type: integer
                                        required:
                                          - podAffinityTerm
                                          - weight
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      description: |-
                                        If the anti-affinity requirements specified by this field are not met at
                                        scheduling time, the pod will not be scheduled onto the node.
                                        If the anti-affinity requirements specified by this field cease to be met
                                        at some point during pod execution (e.g. due to a pod label update), the
                                        system may or may not try to eventually evict the pod from its node.
                                        When there are multiple elements, the lists of nodes corresponding to each
                                        podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                      items:
                                        description: |-
                                          Defines a set of pods (namely those matching the labelSelector
                                          relative to the given namespace(s)) that this pod should be
                                          co-located (affinity) or not co-located (anti-affinity) with,
                                          where co-located is defined as running on a node whose value of
                                          the label with key <topologyKey> matches that of any node on which
                                          a pod of the set of pods is running
                                        properties:
                                          labelSelector:
                                            description: |-
                                              A label query over a set of resources, in this case pods.
                                              If it's null, this PodAffinityTerm matches with no Pods.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a list
                                                  of label selector requirements. The
                                                  requirements are ANDed.
                                                items:
                                                  description: |-
                                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                                    relates the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        operator represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        values is an array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. This array is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                    - key
                                                    - operator
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: |-
                                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                type: object
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          matchLabelKeys:
                                            description: |-
                                              MatchLabelKeys is a set of pod label keys to select which pods will
                                              be taken into consideration. The keys are used to lookup values from the
                                              incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                              to select the group of existing pods which pods will be taken into consideration
                                              for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                              pod labels will be ignored. The default value is empty.
                                              The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                              Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                              This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          mismatchLabelKeys:
                                            description: |-
                                              MismatchLabelKeys is a set of pod label keys to select which pods will
                                              be taken into consideration. The keys are used to lookup values from the
                                              incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                              to select the group of existing pods which pods will be taken into consideration
                                              for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                              pod labels will be ignored. The default value is empty.
                                              The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                              Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                              This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          namespaceSelector:
                                            description: |-
                                              A label query over the set of namespaces that the term applies to.
                                              The term is applied to the union of the namespaces selected by this field
                                              and the ones listed in the namespaces field.
                                              null selector and null or empty namespaces list means "this pod's namespace".
                                              An empty selector ({}) matches all namespaces.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a list
                                                  of label selector requirements. The
                                                  requirements are ANDed.
                                                items:
                                                  description: |-
                                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                                    relates the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        operator represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        values is an array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. This array is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                    - key
                                                    - operator
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: |-
                                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                type: object
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          namespaces:
                                            description: |-
                                              namespaces specifies a static list of namespace names that the term applies to.
                                              The term is applied to the union of the namespaces listed in this field
                                              and the ones selected by namespaceSelector.
                                              null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          topologyKey:
                                            description: |-
                                              This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                              the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                              whose value of the label with key topologyKey matches that of any node on which any of the
                                              selected pods is running.
                                              Empty topologyKey is not allowed.
                                            type: string
                                        required:
                                          - topologyKey
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  type: object
                              type: object
                            enableServiceLinks:
                              description: EnableServiceLinks Indicates whether information
                                about services should be injected into Pod’s environment
                                variables.
                              type: boolean
                            securityContext:
                              description: Security context for pods such as permissions
                                and privilege escalation.
                              properties:
                                appArmorProfile:
                                  description: |-
                                    appArmorProfile is the AppArmor options to use by the containers in this pod.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  properties:
                                    localhostProfile:
                                      description: |-
                                        localhostProfile indicates a profile loaded on the node that should be used.
                                        The profile must be preconfigured on the node to work.
                                        Must match the loaded name of the profile.
                                        Must be set if and only if type is "Localhost".
                                      type: string
                                    type:
                                      description: |-
                                        type indicates which kind of AppArmor profile will be applied.
                                        Valid options are:
                                          Localhost - a profile pre-loaded on the node.
                                          RuntimeDefault - the container runtime's default profile.
                                          Unconfined - no AppArmor enforcement.
                                      type: string
                                  required:
                                    - type
                                  type: object
                                fsGroup:
                                  description: |-
                                    A special supplemental group that applies to all containers in a pod.
                                    Some volume types allow the Kubelet to change the ownership of that volume
                                    to be owned by the pod:
                                    
                                    1. The owning GID will be the FSGroup
                                    2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
                                    3. The permission bits are OR'd with rw-rw----
                                    
                                    If unset, the Kubelet will not modify the ownership and permissions of any volume.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  format: int64
                                  type: integer
                                fsGroupChangePolicy:
                                  description: |-
                                    fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
                                    before being exposed inside Pod. This field will only apply to
                                    volume types which support fsGroup based ownership(and permissions).
                                    It will have no effect on ephemeral volume types such as: secret, configmaps
                                    and emptydir.
                                    Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  type: string
                                runAsGroup:
                                  description: |-
                                    The GID to run the entrypoint of the container process.
                                    Uses runtime default if unset.
                                    May also be set in SecurityContext.  If set in both SecurityContext and
                                    PodSecurityContext, the value specified in SecurityContext takes precedence
                                    for that container.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  format: int64
                                  type: integer
                                runAsNonRoot:
                                  description: |-
                                    Indicates that the container must run as a non-root user.
                                    If true, the Kubelet will validate the image at runtime to ensure that it
                                    does not run as UID 0 (root) and fail to start the container if it does.
                                    If unset or false, no such validation will be performed.
                                    May also be set in SecurityContext.  If set in both SecurityContext and
                                    PodSecurityContext, the value specified in SecurityContext takes precedence.
                                  type: boolean
                                runAsUser:
                                  description: |-
                                    The UID to run the entrypoint of the container process.
                                    Defaults to user specified in image metadata if unspecified.
                                    May also be set in SecurityContext.  If set in both SecurityContext and
                                    PodSecurityContext, the value specified in SecurityContext takes precedence
                                    for that container.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  format: int64
                                  type: integer
                                seLinuxChangePolicy:
                                  description: |-
                                    seLinuxChangePolicy defines how the container's SELinux label is applied to all volumes used by the Pod.
                                    It has no effect on nodes that do not support SELinux or to volumes does not support SELinux.
                                    Valid values are "MountOption" and "Recursive".
                                    
                                    "Recursive" means relabeling of all files on all Pod volumes by the container runtime.
                                    This may be slow for large volumes, but allows mixing privileged and unprivileged Pods sharing the same volume on the same node.
                                    
                                    "MountOption" mounts all eligible Pod volumes with `-o context` mount option.
                                    This requires all Pods that share the same volume to use the same SELinux label.
                                    It is not possible to share the same volume among privileged and unprivileged Pods.
                                    Eligible volumes are in-tree FibreChannel and iSCSI volumes, and all CSI volumes
                                    whose CSI driver announces SELinux support by setting spec.seLinuxMount: true in their
                                    CSIDriver instance. Other volumes are always re-labelled recursively.
                                    "MountOption" value is allowed only when SELinuxMount feature gate is enabled.
                                    
                                    If not specified and SELinuxMount feature gate is enabled, "MountOption" is used.
                                    If not specified and SELinuxMount feature gate is disabled, "MountOption" is used for ReadWriteOncePod volumes
                                    and "Recursive" for all other volumes.
                                    
                                    This field affects only Pods that have SELinux label set, either in PodSecurityContext or in SecurityContext of all containers.
                                    
                                    All Pods that use the same volume should use the same seLinuxChangePolicy, otherwise some pods can get stuck in ContainerCreating state.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  type: string
                                seLinuxOptions:
                                  description: |-
                                    The SELinux context to be applied to all containers.
                                    If unspecified, the container runtime will allocate a random SELinux context for each
                                    container.  May also be set in SecurityContext.  If set in
                                    both SecurityContext and PodSecurityContext, the value specified in SecurityContext
                                    takes precedence for that container.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  properties:
                                    level:
                                      description: Level is SELinux level label that
                                        applies to the container.
                                      type: string
                                    role:
                                      description: Role is a SELinux role label that
                                        applies to the container.
                                      type: string
                                    type:
                                      description: Type is a SELinux type label that
                                        applies to the container.
                                      type: string
                                    user:
                                      description: User is a SELinux user label that
                                        applies to the container.
                                      type: string
                                  type: object
                                seccompProfile:
                                  description: |-
                                    The seccomp options to use by the containers in this pod.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  properties:
                                    localhostProfile:
                                      description: |-
                                        localhostProfile indicates a profile defined in a file on the node should be used.
                                        The profile must be preconfigured on the node to work.
                                        Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                        Must be set if type is "Localhost". Must NOT be set for any other type.
                                      type: string
                                    type:
                                      description: |-
                                        type indicates which kind of seccomp profile will be applied.
                                        Valid options are:
                                        
                                        Localhost - a profile defined in a file on the node should be used.
                                        RuntimeDefault - the container runtime default profile should be used.
                                        Unconfined - no profile should be applied.
                                      type: string
                                  required:
                                    - type
                                  type: object
                                supplementalGroups:
                                  description: |-
                                    A list of groups applied to the first process run in each container, in
                                    addition to the container's primary GID and fsGroup (if specified).  If
                                    the SupplementalGroupsPolicy feature is enabled, the
                                    supplementalGroupsPolicy field determines whether these are in addition
                                    to or instead of any group memberships defined in the container image.
                                    If unspecified, no additional groups are added, though group memberships
                                    defined in the container image may still be used, depending on the
                                    supplementalGroupsPolicy field.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  items:
                                    format: int64
                                    type: integer
                                  type: array
                                  x-kubernetes-list-type: atomic
                                supplementalGroupsPolicy:
                                  description: |-
                                    Defines how supplemental groups of the first container processes are calculated.
                                    Valid values are "Merge" and "Strict". If not specified, "Merge" is used.
                                    (Alpha) Using the field requires the SupplementalGroupsPolicy feature gate to be enabled
                                    and the container runtime must implement support for this feature.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  type: string
                                sysctls:
                                  description: |-
                                    Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
                                    sysctls (by the container runtime) might fail to launch.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  items:
                                    description: Sysctl defines a kernel parameter to
                                      be set
                                    properties:
                                      name:
                                        description: Name of a property to set
                                        type: string
                                      value:
                                        description: Value of a property to set
                                        type: string
                                    required:
                                      - name
                                      - value
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                windowsOptions:
                                  description: |-
                                    The Windows specific settings applied to all containers.
                                    If unspecified, the options within a container's SecurityContext will be used.
                                    If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                    Note that this field cannot be set when spec.os.name is linux.
                                  properties:
                                    gmsaCredentialSpec:
                                      description: |-
                                        GMSACredentialSpec is where the GMSA admission webhook
                                        (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                        GMSA credential spec named by the GMSACredentialSpecName field.
                                      type: string
                                    gmsaCredentialSpecName:
                                      description: GMSACredentialSpecName is the name
                                        of the GMSA credential spec to use.
                                      type: string
                                    hostProcess:
                                      description: |-
                                        HostProcess determines if a container should be run as a 'Host Process' container.
                                        All of a Pod's containers must have the same effective HostProcess value
                                        (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                        In addition, if HostProcess is true then HostNetwork must also be set to true.
                                      type: boolean
                                    runAsUserName:
                                      description: |-
                                        The UserName in Windows to run the entrypoint of the container process.
                                        Defaults to the user specified in image metadata if unspecified.
                                        May also be set in PodSecurityContext. If set in both SecurityContext and
                                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                                      type: string
                                  type: object
                              type: object
                            tolerations:
                              description: Tolerations for pods to schedule onto nodes
                                with taints.
                              items:
                                description: |-
                                  The pod this Toleration is attached to tolerates any taint that matches
                                  the triple <key,value,effect> using the matching operator <operator>.
                                properties:
                                  effect:
                                    description: |-
                                      Effect indicates the taint effect to match. Empty means match all taint effects.
                                      When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                    type: string
                                  key:
                                    description: |-
                                      Key is the taint key that the toleration applies to. Empty means match all taint keys.
                                      If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                    type: string
                                  operator:
                                    description: |-
                                      Operator represents a key's relationship to the value.
                                      Valid operators are Exists and Equal. Defaults to Equal.
                                      Exists is equivalent to wildcard for value, so that a pod can
                                      tolerate all taints of a particular category.
                                    type: string
                                  tolerationSeconds:
                                    description: |-
                                      TolerationSeconds represents the period of time the toleration (which must be
                                      of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                                      it is not set, which means tolerate the taint forever (do not evict). Zero and
                                      negative values will be treated as 0 (evict immediately) by the system.
                                    format: int64
                                    type: integer
                                  value:
                                    description: |-
                                      Value is the taint value the toleration matches to.
                                      If the operator is Exists, the value should be empty, otherwise just a regular string.
                                    type: string
                                type: object
                              type: array
                          type: object
                      type: object
                    topicRegex:
                      description: The TopicRegex field specifies regex for scraping
                        metrics from topics
                      type: string
                  type: object
                mode:
                  description: Mode field defines the mode for kafka cluster
                  enum:
                    - KRaft
                    - Zookeeper
                  type: string
                pause:
                  description: Pause field indicates whether Kafka is paused.
                  type: boolean
                replicas:
                  description: Number of replicas for Kafka brokers
                  format: int32
                  type: integer
                resources:
                  description: Resource requests/limits for pods
                  properties:
                    claims:
                      description: |-
                        Claims lists the names of resources, defined in spec.resourceClaims,
                        that are used by this container.
                        
                        This is an alpha field and requires enabling the
                        DynamicResourceAllocation feature gate.
                        
                        This field is immutable. It can only be set for containers.
                      items:
                        description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                        properties:
                          name:
                            description: |-
                              Name must match the name of one entry in pod.spec.resourceClaims of
                              the Pod where this field is used. It makes that resource available
                              inside a container.
                            type: string
                          request:
                            description: |-
                              Request is the name chosen for a request in the referenced claim.
                              If empty, everything from the claim is made available, otherwise
                              only the result of this request.
                            type: string
                        required:
                          - name
                        type: object
                      type: array
                      x-kubernetes-list-map-keys:
                        - name
                      x-kubernetes-list-type: map
                    limits:
                      additionalProperties:
                        anyOf:
                          - type: integer
                          - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      description: |-
                        Limits describes the maximum amount of compute resources allowed.
                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                    requests:
                      additionalProperties:
                        anyOf:
                          - type: integer
                          - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      description: |-
                        Requests describes the minimum amount of compute resources required.
                        If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                        otherwise to an implementation-defined value. Requests cannot exceed Limits.
                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                  type: object
                storage:
                  description: Storage configuration for persistent volumes
                  properties:
                    class:
                      type: string
                    deleteClaim:
                      type: boolean
                    size:
                      anyOf:
                        - type: integer
                        - type: string
                      description: The name of the StorageClass to claim a PersistentVolume
                        from.
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                  required:
                    - class
                    - size
                  type: object
                upgradeOption:
                  description: UpgradeOption defines the upgrade strategy for the Kafka
                    instance.
                  properties:
                    autoUpgrade:
                      description: AutoUpgrade is the flag to auto upgrade the MySQL
                      type: boolean
                    crVersion:
                      description: CRVersion is the version of the CR
                      type: string
                  type: object
                version:
                  description: Kafka Cluster version
                  type: string
                zookeeper:
                  description: Zookeeper configuration
                  properties:
                    jvmOptions:
                      description: JvmOptions defines Java options for the Zookeeper
                        process
                      properties:
                        -Xms:
                          description: The Xms field sets the JVM min heap size parameter
                          type: string
                        -Xmx:
                          description: The Xmx field sets the JVM max heap size parameter
                          type: string
                      type: object
                    logging:
                      description: Logging configuration for Zookeeper.
                      properties:
                        loggers:
                          additionalProperties:
                            type: string
                          description: Loggers is a map from logger name to logger level.
                          type: object
                        type:
                          description: Logging type , it must have the value inline
                          type: string
                      required:
                        - loggers
                        - type
                      type: object
                    replicas:
                      description: Replicas defines the number of Zookeeper pods
                      format: int32
                      type: integer
                    resources:
                      description: Resources defines CPU/memory resource requests/limits
                      properties:
                        claims:
                          description: |-
                            Claims lists the names of resources, defined in spec.resourceClaims,
                            that are used by this container.
                            
                            This is an alpha field and requires enabling the
                            DynamicResourceAllocation feature gate.
                            
                            This field is immutable. It can only be set for containers.
                          items:
                            description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                            properties:
                              name:
                                description: |-
                                  Name must match the name of one entry in pod.spec.resourceClaims of
                                  the Pod where this field is used. It makes that resource available
                                  inside a container.
                                type: string
                              request:
                                description: |-
                                  Request is the name chosen for a request in the referenced claim.
                                  If empty, everything from the claim is made available, otherwise
                                  only the result of this request.
                                type: string
                            required:
                              - name
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                            - name
                          x-kubernetes-list-type: map
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: |-
                            Limits describes the maximum amount of compute resources allowed.
                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: |-
                            Requests describes the minimum amount of compute resources required.
                            If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                            otherwise to an implementation-defined value. Requests cannot exceed Limits.
                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                      type: object
                    storage:
                      description: Storage defines the volumes used for data persistence
                      properties:
                        class:
                          type: string
                        deleteClaim:
                          type: boolean
                        size:
                          anyOf:
                            - type: integer
                            - type: string
                          description: The name of the StorageClass to claim a PersistentVolume
                            from.
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                      required:
                        - class
                        - size
                      type: object
                    template:
                      description: Template customizes pods using a PodTemplate
                      properties:
                        pod:
                          description: |-
                            Pod template for containers in the pod.
                            Contains security context, affinity and tolerations settings.
                          properties:
                            affinity:
                              description: Affinity and anti-affinity rules for pod
                                scheduling.
                              properties:
                                nodeAffinity:
                                  description: Describes node affinity scheduling rules
                                    for the pod.
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      description: |-
                                        The scheduler will prefer to schedule pods to nodes that satisfy
                                        the affinity expressions specified by this field, but it may choose
                                        a node that violates one or more of the expressions. The node that is
                                        most preferred is the one with the greatest sum of weights, i.e.
                                        for each node that meets all of the scheduling requirements (resource
                                        request, requiredDuringScheduling affinity expressions, etc.),
                                        compute a sum by iterating through the elements of this field and adding
                                        "weight" to the sum if the node matches the corresponding matchExpressions; the
                                        node(s) with the highest sum are the most preferred.
                                      items:
                                        description: |-
                                          An empty preferred scheduling term matches all objects with implicit weight 0
                                          (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                                        properties:
                                          preference:
                                            description: A node selector term, associated
                                              with the corresponding weight.
                                            properties:
                                              matchExpressions:
                                                description: A list of node selector
                                                  requirements by node's labels.
                                                items:
                                                  description: |-
                                                    A node selector requirement is a selector that contains values, a key, and an operator
                                                    that relates the key and values.
                                                  properties:
                                                    key:
                                                      description: The label key that
                                                        the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        Represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        An array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. If the operator is Gt or Lt, the values
                                                        array must have a single element, which will be interpreted as an integer.
                                                        This array is replaced during a strategic merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                    - key
                                                    - operator
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              matchFields:
                                                description: A list of node selector
                                                  requirements by node's fields.
                                                items:
                                                  description: |-
                                                    A node selector requirement is a selector that contains values, a key, and an operator
                                                    that relates the key and values.
                                                  properties:
                                                    key:
                                                      description: The label key that
                                                        the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        Represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        An array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. If the operator is Gt or Lt, the values
                                                        array must have a single element, which will be interpreted as an integer.
                                                        This array is replaced during a strategic merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                    - key
                                                    - operator
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          weight:
                                            description: Weight associated with matching
                                              the corresponding nodeSelectorTerm, in
                                              the range 1-100.
                                            format: int32
                                            type: integer
                                        required:
                                          - preference
                                          - weight
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      description: |-
                                        If the affinity requirements specified by this field are not met at
                                        scheduling time, the pod will not be scheduled onto the node.
                                        If the affinity requirements specified by this field cease to be met
                                        at some point during pod execution (e.g. due to an update), the system
                                        may or may not try to eventually evict the pod from its node.
                                      properties:
                                        nodeSelectorTerms:
                                          description: Required. A list of node selector
                                            terms. The terms are ORed.
                                          items:
                                            description: |-
                                              A null or empty node selector term matches no objects. The requirements of
                                              them are ANDed.
                                              The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                            properties:
                                              matchExpressions:
                                                description: A list of node selector
                                                  requirements by node's labels.
                                                items:
                                                  description: |-
                                                    A node selector requirement is a selector that contains values, a key, and an operator
                                                    that relates the key and values.
                                                  properties:
                                                    key:
                                                      description: The label key that
                                                        the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        Represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        An array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. If the operator is Gt or Lt, the values
                                                        array must have a single element, which will be interpreted as an integer.
                                                        This array is replaced during a strategic merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                    - key
                                                    - operator
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              matchFields:
                                                description: A list of node selector
                                                  requirements by node's fields.
                                                items:
                                                  description: |-
                                                    A node selector requirement is a selector that contains values, a key, and an operator
                                                    that relates the key and values.
                                                  properties:
                                                    key:
                                                      description: The label key that
                                                        the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        Represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        An array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. If the operator is Gt or Lt, the values
                                                        array must have a single element, which will be interpreted as an integer.
                                                        This array is replaced during a strategic merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                    - key
                                                    - operator
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      required:
                                        - nodeSelectorTerms
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                podAffinity:
                                  description: Describes pod affinity scheduling rules
                                    (e.g. co-locate this pod in the same node, zone,
                                    etc. as some other pod(s)).
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      description: |-
                                        The scheduler will prefer to schedule pods to nodes that satisfy
                                        the affinity expressions specified by this field, but it may choose
                                        a node that violates one or more of the expressions. The node that is
                                        most preferred is the one with the greatest sum of weights, i.e.
                                        for each node that meets all of the scheduling requirements (resource
                                        request, requiredDuringScheduling affinity expressions, etc.),
                                        compute a sum by iterating through the elements of this field and adding
                                        "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                        node(s) with the highest sum are the most preferred.
                                      items:
                                        description: The weights of all of the matched
                                          WeightedPodAffinityTerm fields are added per-node
                                          to find the most preferred node(s)
                                        properties:
                                          podAffinityTerm:
                                            description: Required. A pod affinity term,
                                              associated with the corresponding weight.
                                            properties:
                                              labelSelector:
                                                description: |-
                                                  A label query over a set of resources, in this case pods.
                                                  If it's null, this PodAffinityTerm matches with no Pods.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions is
                                                      a list of label selector requirements.
                                                      The requirements are ANDed.
                                                    items:
                                                      description: |-
                                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                                        relates the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the label
                                                            key that the selector applies
                                                            to.
                                                          type: string
                                                        operator:
                                                          description: |-
                                                            operator represents a key's relationship to a set of values.
                                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: |-
                                                            values is an array of string values. If the operator is In or NotIn,
                                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                            the values array must be empty. This array is replaced during a strategic
                                                            merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                      required:
                                                        - key
                                                        - operator
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: |-
                                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                    type: object
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              matchLabelKeys:
                                                description: |-
                                                  MatchLabelKeys is a set of pod label keys to select which pods will
                                                  be taken into consideration. The keys are used to lookup values from the
                                                  incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                  to select the group of existing pods which pods will be taken into consideration
                                                  for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                  pod labels will be ignored. The default value is empty.
                                                  The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                  Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                  This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              mismatchLabelKeys:
                                                description: |-
                                                  MismatchLabelKeys is a set of pod label keys to select which pods will
                                                  be taken into consideration. The keys are used to lookup values from the
                                                  incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                  to select the group of existing pods which pods will be taken into consideration
                                                  for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                  pod labels will be ignored. The default value is empty.
                                                  The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                  Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                  This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              namespaceSelector:
                                                description: |-
                                                  A label query over the set of namespaces that the term applies to.
                                                  The term is applied to the union of the namespaces selected by this field
                                                  and the ones listed in the namespaces field.
                                                  null selector and null or empty namespaces list means "this pod's namespace".
                                                  An empty selector ({}) matches all namespaces.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions is
                                                      a list of label selector requirements.
                                                      The requirements are ANDed.
                                                    items:
                                                      description: |-
                                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                                        relates the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the label
                                                            key that the selector applies
                                                            to.
                                                          type: string
                                                        operator:
                                                          description: |-
                                                            operator represents a key's relationship to a set of values.
                                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: |-
                                                            values is an array of string values. If the operator is In or NotIn,
                                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                            the values array must be empty. This array is replaced during a strategic
                                                            merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                      required:
                                                        - key
                                                        - operator
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: |-
                                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                    type: object
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              namespaces:
                                                description: |-
                                                  namespaces specifies a static list of namespace names that the term applies to.
                                                  The term is applied to the union of the namespaces listed in this field
                                                  and the ones selected by namespaceSelector.
                                                  null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              topologyKey:
                                                description: |-
                                                  This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                  the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                  whose value of the label with key topologyKey matches that of any node on which any of the
                                                  selected pods is running.
                                                  Empty topologyKey is not allowed.
                                                type: string
                                            required:
                                              - topologyKey
                                            type: object
                                          weight:
                                            description: |-
                                              weight associated with matching the corresponding podAffinityTerm,
                                              in the range 1-100.
                                            format: int32
                                            type: integer
                                        required:
                                          - podAffinityTerm
                                          - weight
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      description: |-
                                        If the affinity requirements specified by this field are not met at
                                        scheduling time, the pod will not be scheduled onto the node.
                                        If the affinity requirements specified by this field cease to be met
                                        at some point during pod execution (e.g. due to a pod label update), the
                                        system may or may not try to eventually evict the pod from its node.
                                        When there are multiple elements, the lists of nodes corresponding to each
                                        podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                      items:
                                        description: |-
                                          Defines a set of pods (namely those matching the labelSelector
                                          relative to the given namespace(s)) that this pod should be
                                          co-located (affinity) or not co-located (anti-affinity) with,
                                          where co-located is defined as running on a node whose value of
                                          the label with key <topologyKey> matches that of any node on which
                                          a pod of the set of pods is running
                                        properties:
                                          labelSelector:
                                            description: |-
                                              A label query over a set of resources, in this case pods.
                                              If it's null, this PodAffinityTerm matches with no Pods.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a list
                                                  of label selector requirements. The
                                                  requirements are ANDed.
                                                items:
                                                  description: |-
                                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                                    relates the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        operator represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        values is an array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. This array is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                    - key
                                                    - operator
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: |-
                                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                type: object
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          matchLabelKeys:
                                            description: |-
                                              MatchLabelKeys is a set of pod label keys to select which pods will
                                              be taken into consideration. The keys are used to lookup values from the
                                              incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                              to select the group of existing pods which pods will be taken into consideration
                                              for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                              pod labels will be ignored. The default value is empty.
                                              The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                              Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                              This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          mismatchLabelKeys:
                                            description: |-
                                              MismatchLabelKeys is a set of pod label keys to select which pods will
                                              be taken into consideration. The keys are used to lookup values from the
                                              incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                              to select the group of existing pods which pods will be taken into consideration
                                              for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                              pod labels will be ignored. The default value is empty.
                                              The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                              Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                              This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          namespaceSelector:
                                            description: |-
                                              A label query over the set of namespaces that the term applies to.
                                              The term is applied to the union of the namespaces selected by this field
                                              and the ones listed in the namespaces field.
                                              null selector and null or empty namespaces list means "this pod's namespace".
                                              An empty selector ({}) matches all namespaces.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a list
                                                  of label selector requirements. The
                                                  requirements are ANDed.
                                                items:
                                                  description: |-
                                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                                    relates the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        operator represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        values is an array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. This array is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                    - key
                                                    - operator
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: |-
                                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                type: object
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          namespaces:
                                            description: |-
                                              namespaces specifies a static list of namespace names that the term applies to.
                                              The term is applied to the union of the namespaces listed in this field
                                              and the ones selected by namespaceSelector.
                                              null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          topologyKey:
                                            description: |-
                                              This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                              the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                              whose value of the label with key topologyKey matches that of any node on which any of the
                                              selected pods is running.
                                              Empty topologyKey is not allowed.
                                            type: string
                                        required:
                                          - topologyKey
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  type: object
                                podAntiAffinity:
                                  description: Describes pod anti-affinity scheduling
                                    rules (e.g. avoid putting this pod in the same node,
                                    zone, etc. as some other pod(s)).
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      description: |-
                                        The scheduler will prefer to schedule pods to nodes that satisfy
                                        the anti-affinity expressions specified by this field, but it may choose
                                        a node that violates one or more of the expressions. The node that is
                                        most preferred is the one with the greatest sum of weights, i.e.
                                        for each node that meets all of the scheduling requirements (resource
                                        request, requiredDuringScheduling anti-affinity expressions, etc.),
                                        compute a sum by iterating through the elements of this field and adding
                                        "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                        node(s) with the highest sum are the most preferred.
                                      items:
                                        description: The weights of all of the matched
                                          WeightedPodAffinityTerm fields are added per-node
                                          to find the most preferred node(s)
                                        properties:
                                          podAffinityTerm:
                                            description: Required. A pod affinity term,
                                              associated with the corresponding weight.
                                            properties:
                                              labelSelector:
                                                description: |-
                                                  A label query over a set of resources, in this case pods.
                                                  If it's null, this PodAffinityTerm matches with no Pods.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions is
                                                      a list of label selector requirements.
                                                      The requirements are ANDed.
                                                    items:
                                                      description: |-
                                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                                        relates the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the label
                                                            key that the selector applies
                                                            to.
                                                          type: string
                                                        operator:
                                                          description: |-
                                                            operator represents a key's relationship to a set of values.
                                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: |-
                                                            values is an array of string values. If the operator is In or NotIn,
                                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                            the values array must be empty. This array is replaced during a strategic
                                                            merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                      required:
                                                        - key
                                                        - operator
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: |-
                                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                    type: object
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              matchLabelKeys:
                                                description: |-
                                                  MatchLabelKeys is a set of pod label keys to select which pods will
                                                  be taken into consideration. The keys are used to lookup values from the
                                                  incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                  to select the group of existing pods which pods will be taken into consideration
                                                  for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                  pod labels will be ignored. The default value is empty.
                                                  The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                  Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                  This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              mismatchLabelKeys:
                                                description: |-
                                                  MismatchLabelKeys is a set of pod label keys to select which pods will
                                                  be taken into consideration. The keys are used to lookup values from the
                                                  incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                  to select the group of existing pods which pods will be taken into consideration
                                                  for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                  pod labels will be ignored. The default value is empty.
                                                  The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                  Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                  This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              namespaceSelector:
                                                description: |-
                                                  A label query over the set of namespaces that the term applies to.
                                                  The term is applied to the union of the namespaces selected by this field
                                                  and the ones listed in the namespaces field.
                                                  null selector and null or empty namespaces list means "this pod's namespace".
                                                  An empty selector ({}) matches all namespaces.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions is
                                                      a list of label selector requirements.
                                                      The requirements are ANDed.
                                                    items:
                                                      description: |-
                                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                                        relates the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the label
                                                            key that the selector applies
                                                            to.
                                                          type: string
                                                        operator:
                                                          description: |-
                                                            operator represents a key's relationship to a set of values.
                                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: |-
                                                            values is an array of string values. If the operator is In or NotIn,
                                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                            the values array must be empty. This array is replaced during a strategic
                                                            merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                      required:
                                                        - key
                                                        - operator
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: |-
                                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                    type: object
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              namespaces:
                                                description: |-
                                                  namespaces specifies a static list of namespace names that the term applies to.
                                                  The term is applied to the union of the namespaces listed in this field
                                                  and the ones selected by namespaceSelector.
                                                  null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              topologyKey:
                                                description: |-
                                                  This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                  the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                  whose value of the label with key topologyKey matches that of any node on which any of the
                                                  selected pods is running.
                                                  Empty topologyKey is not allowed.
                                                type: string
                                            required:
                                              - topologyKey
                                            type: object
                                          weight:
                                            description: |-
                                              weight associated with matching the corresponding podAffinityTerm,
                                              in the range 1-100.
                                            format: int32
                                            type: integer
                                        required:
                                          - podAffinityTerm
                                          - weight
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      description: |-
                                        If the anti-affinity requirements specified by this field are not met at
                                        scheduling time, the pod will not be scheduled onto the node.
                                        If the anti-affinity requirements specified by this field cease to be met
                                        at some point during pod execution (e.g. due to a pod label update), the
                                        system may or may not try to eventually evict the pod from its node.
                                        When there are multiple elements, the lists of nodes corresponding to each
                                        podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                      items:
                                        description: |-
                                          Defines a set of pods (namely those matching the labelSelector
                                          relative to the given namespace(s)) that this pod should be
                                          co-located (affinity) or not co-located (anti-affinity) with,
                                          where co-located is defined as running on a node whose value of
                                          the label with key <topologyKey> matches that of any node on which
                                          a pod of the set of pods is running
                                        properties:
                                          labelSelector:
                                            description: |-
                                              A label query over a set of resources, in this case pods.
                                              If it's null, this PodAffinityTerm matches with no Pods.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a list
                                                  of label selector requirements. The
                                                  requirements are ANDed.
                                                items:
                                                  description: |-
                                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                                    relates the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        operator represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        values is an array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. This array is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                    - key
                                                    - operator
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: |-
                                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                type: object
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          matchLabelKeys:
                                            description: |-
                                              MatchLabelKeys is a set of pod label keys to select which pods will
                                              be taken into consideration. The keys are used to lookup values from the
                                              incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                              to select the group of existing pods which pods will be taken into consideration
                                              for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                              pod labels will be ignored. The default value is empty.
                                              The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                              Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                              This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          mismatchLabelKeys:
                                            description: |-
                                              MismatchLabelKeys is a set of pod label keys to select which pods will
                                              be taken into consideration. The keys are used to lookup values from the
                                              incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                              to select the group of existing pods which pods will be taken into consideration
                                              for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                              pod labels will be ignored. The default value is empty.
                                              The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                              Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                              This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          namespaceSelector:
                                            description: |-
                                              A label query over the set of namespaces that the term applies to.
                                              The term is applied to the union of the namespaces selected by this field
                                              and the ones listed in the namespaces field.
                                              null selector and null or empty namespaces list means "this pod's namespace".
                                              An empty selector ({}) matches all namespaces.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a list
                                                  of label selector requirements. The
                                                  requirements are ANDed.
                                                items:
                                                  description: |-
                                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                                    relates the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        operator represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        values is an array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. This array is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                    - key
                                                    - operator
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: |-
                                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                type: object
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          namespaces:
                                            description: |-
                                              namespaces specifies a static list of namespace names that the term applies to.
                                              The term is applied to the union of the namespaces listed in this field
                                              and the ones selected by namespaceSelector.
                                              null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          topologyKey:
                                            description: |-
                                              This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                              the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                              whose value of the label with key topologyKey matches that of any node on which any of the
                                              selected pods is running.
                                              Empty topologyKey is not allowed.
                                            type: string
                                        required:
                                          - topologyKey
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  type: object
                              type: object
                            enableServiceLinks:
                              description: EnableServiceLinks Indicates whether information
                                about services should be injected into Pod’s environment
                                variables.
                              type: boolean
                            securityContext:
                              description: Security context for pods such as permissions
                                and privilege escalation.
                              properties:
                                appArmorProfile:
                                  description: |-
                                    appArmorProfile is the AppArmor options to use by the containers in this pod.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  properties:
                                    localhostProfile:
                                      description: |-
                                        localhostProfile indicates a profile loaded on the node that should be used.
                                        The profile must be preconfigured on the node to work.
                                        Must match the loaded name of the profile.
                                        Must be set if and only if type is "Localhost".
                                      type: string
                                    type:
                                      description: |-
                                        type indicates which kind of AppArmor profile will be applied.
                                        Valid options are:
                                          Localhost - a profile pre-loaded on the node.
                                          RuntimeDefault - the container runtime's default profile.
                                          Unconfined - no AppArmor enforcement.
                                      type: string
                                  required:
                                    - type
                                  type: object
                                fsGroup:
                                  description: |-
                                    A special supplemental group that applies to all containers in a pod.
                                    Some volume types allow the Kubelet to change the ownership of that volume
                                    to be owned by the pod:
                                    
                                    1. The owning GID will be the FSGroup
                                    2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
                                    3. The permission bits are OR'd with rw-rw----
                                    
                                    If unset, the Kubelet will not modify the ownership and permissions of any volume.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  format: int64
                                  type: integer
                                fsGroupChangePolicy:
                                  description: |-
                                    fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
                                    before being exposed inside Pod. This field will only apply to
                                    volume types which support fsGroup based ownership(and permissions).
                                    It will have no effect on ephemeral volume types such as: secret, configmaps
                                    and emptydir.
                                    Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  type: string
                                runAsGroup:
                                  description: |-
                                    The GID to run the entrypoint of the container process.
                                    Uses runtime default if unset.
                                    May also be set in SecurityContext.  If set in both SecurityContext and
                                    PodSecurityContext, the value specified in SecurityContext takes precedence
                                    for that container.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  format: int64
                                  type: integer
                                runAsNonRoot:
                                  description: |-
                                    Indicates that the container must run as a non-root user.
                                    If true, the Kubelet will validate the image at runtime to ensure that it
                                    does not run as UID 0 (root) and fail to start the container if it does.
                                    If unset or false, no such validation will be performed.
                                    May also be set in SecurityContext.  If set in both SecurityContext and
                                    PodSecurityContext, the value specified in SecurityContext takes precedence.
                                  type: boolean
                                runAsUser:
                                  description: |-
                                    The UID to run the entrypoint of the container process.
                                    Defaults to user specified in image metadata if unspecified.
                                    May also be set in SecurityContext.  If set in both SecurityContext and
                                    PodSecurityContext, the value specified in SecurityContext takes precedence
                                    for that container.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  format: int64
                                  type: integer
                                seLinuxChangePolicy:
                                  description: |-
                                    seLinuxChangePolicy defines how the container's SELinux label is applied to all volumes used by the Pod.
                                    It has no effect on nodes that do not support SELinux or to volumes does not support SELinux.
                                    Valid values are "MountOption" and "Recursive".
                                    
                                    "Recursive" means relabeling of all files on all Pod volumes by the container runtime.
                                    This may be slow for large volumes, but allows mixing privileged and unprivileged Pods sharing the same volume on the same node.
                                    
                                    "MountOption" mounts all eligible Pod volumes with `-o context` mount option.
                                    This requires all Pods that share the same volume to use the same SELinux label.
                                    It is not possible to share the same volume among privileged and unprivileged Pods.
                                    Eligible volumes are in-tree FibreChannel and iSCSI volumes, and all CSI volumes
                                    whose CSI driver announces SELinux support by setting spec.seLinuxMount: true in their
                                    CSIDriver instance. Other volumes are always re-labelled recursively.
                                    "MountOption" value is allowed only when SELinuxMount feature gate is enabled.
                                    
                                    If not specified and SELinuxMount feature gate is enabled, "MountOption" is used.
                                    If not specified and SELinuxMount feature gate is disabled, "MountOption" is used for ReadWriteOncePod volumes
                                    and "Recursive" for all other volumes.
                                    
                                    This field affects only Pods that have SELinux label set, either in PodSecurityContext or in SecurityContext of all containers.
                                    
                                    All Pods that use the same volume should use the same seLinuxChangePolicy, otherwise some pods can get stuck in ContainerCreating state.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  type: string
                                seLinuxOptions:
                                  description: |-
                                    The SELinux context to be applied to all containers.
                                    If unspecified, the container runtime will allocate a random SELinux context for each
                                    container.  May also be set in SecurityContext.  If set in
                                    both SecurityContext and PodSecurityContext, the value specified in SecurityContext
                                    takes precedence for that container.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  properties:
                                    level:
                                      description: Level is SELinux level label that
                                        applies to the container.
                                      type: string
                                    role:
                                      description: Role is a SELinux role label that
                                        applies to the container.
                                      type: string
                                    type:
                                      description: Type is a SELinux type label that
                                        applies to the container.
                                      type: string
                                    user:
                                      description: User is a SELinux user label that
                                        applies to the container.
                                      type: string
                                  type: object
                                seccompProfile:
                                  description: |-
                                    The seccomp options to use by the containers in this pod.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  properties:
                                    localhostProfile:
                                      description: |-
                                        localhostProfile indicates a profile defined in a file on the node should be used.
                                        The profile must be preconfigured on the node to work.
                                        Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                        Must be set if type is "Localhost". Must NOT be set for any other type.
                                      type: string
                                    type:
                                      description: |-
                                        type indicates which kind of seccomp profile will be applied.
                                        Valid options are:
                                        
                                        Localhost - a profile defined in a file on the node should be used.
                                        RuntimeDefault - the container runtime default profile should be used.
                                        Unconfined - no profile should be applied.
                                      type: string
                                  required:
                                    - type
                                  type: object
                                supplementalGroups:
                                  description: |-
                                    A list of groups applied to the first process run in each container, in
                                    addition to the container's primary GID and fsGroup (if specified).  If
                                    the SupplementalGroupsPolicy feature is enabled, the
                                    supplementalGroupsPolicy field determines whether these are in addition
                                    to or instead of any group memberships defined in the container image.
                                    If unspecified, no additional groups are added, though group memberships
                                    defined in the container image may still be used, depending on the
                                    supplementalGroupsPolicy field.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  items:
                                    format: int64
                                    type: integer
                                  type: array
                                  x-kubernetes-list-type: atomic
                                supplementalGroupsPolicy:
                                  description: |-
                                    Defines how supplemental groups of the first container processes are calculated.
                                    Valid values are "Merge" and "Strict". If not specified, "Merge" is used.
                                    (Alpha) Using the field requires the SupplementalGroupsPolicy feature gate to be enabled
                                    and the container runtime must implement support for this feature.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  type: string
                                sysctls:
                                  description: |-
                                    Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
                                    sysctls (by the container runtime) might fail to launch.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  items:
                                    description: Sysctl defines a kernel parameter to
                                      be set
                                    properties:
                                      name:
                                        description: Name of a property to set
                                        type: string
                                      value:
                                        description: Value of a property to set
                                        type: string
                                    required:
                                      - name
                                      - value
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                windowsOptions:
                                  description: |-
                                    The Windows specific settings applied to all containers.
                                    If unspecified, the options within a container's SecurityContext will be used.
                                    If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                    Note that this field cannot be set when spec.os.name is linux.
                                  properties:
                                    gmsaCredentialSpec:
                                      description: |-
                                        GMSACredentialSpec is where the GMSA admission webhook
                                        (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                        GMSA credential spec named by the GMSACredentialSpecName field.
                                      type: string
                                    gmsaCredentialSpecName:
                                      description: GMSACredentialSpecName is the name
                                        of the GMSA credential spec to use.
                                      type: string
                                    hostProcess:
                                      description: |-
                                        HostProcess determines if a container should be run as a 'Host Process' container.
                                        All of a Pod's containers must have the same effective HostProcess value
                                        (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                        In addition, if HostProcess is true then HostNetwork must also be set to true.
                                      type: boolean
                                    runAsUserName:
                                      description: |-
                                        The UserName in Windows to run the entrypoint of the container process.
                                        Defaults to the user specified in image metadata if unspecified.
                                        May also be set in PodSecurityContext. If set in both SecurityContext and
                                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                                      type: string
                                  type: object
                              type: object
                            tolerations:
                              description: Tolerations for pods to schedule onto nodes
                                with taints.
                              items:
                                description: |-
                                  The pod this Toleration is attached to tolerates any taint that matches
                                  the triple <key,value,effect> using the matching operator <operator>.
                                properties:
                                  effect:
                                    description: |-
                                      Effect indicates the taint effect to match. Empty means match all taint effects.
                                      When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                    type: string
                                  key:
                                    description: |-
                                      Key is the taint key that the toleration applies to. Empty means match all taint keys.
                                      If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                    type: string
                                  operator:
                                    description: |-
                                      Operator represents a key's relationship to the value.
                                      Valid operators are Exists and Equal. Defaults to Equal.
                                      Exists is equivalent to wildcard for value, so that a pod can
                                      tolerate all taints of a particular category.
                                    type: string
                                  tolerationSeconds:
                                    description: |-
                                      TolerationSeconds represents the period of time the toleration (which must be
                                      of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                                      it is not set, which means tolerate the taint forever (do not evict). Zero and
                                      negative values will be treated as 0 (evict immediately) by the system.
                                    format: int64
                                    type: integer
                                  value:
                                    description: |-
                                      Value is the taint value the toleration matches to.
                                      If the operator is Exists, the value should be empty, otherwise just a regular string.
                                    type: string
                                type: object
                              type: array
                          type: object
                      type: object
                  required:
                    - replicas
                    - resources
                    - storage
                  type: object
              type: object
            status:
              description: RdsKafkaStatus defines the observed state of RdsKafka
              properties:
                clusterId:
                  description: Kafka ClusterId
                  type: string
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        description: Last time the condition of a type changed from
                          one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ',
                          in the UTC time zone.
                        type: string
                      message:
                        description: Human-readable message indicating details about
                          the condition’s last transition.
                        type: string
                      reason:
                        description: The reason for the condition’s last transition
                          (a single word in CamelCase).
                        type: string
                      status:
                        description: The status of the condition, either True, False
                          or Unknown.
                        type: string
                      type:
                        description: The unique identifier of a condition, used to distinguish
                          between other conditions in the resource.
                        type: string
                    type: object
                  type: array
                lastUpdateTime:
                  format: date-time
                  type: string
                migration:
                  description: Migration phase
                  type: string
                nodes:
                  items:
                    properties:
                      ipAddress:
                        type: string
                      nodeName:
                        type: string
                      pod:
                        type: string
                    type: object
                  type: array
                operatorVersion:
                  type: string
                phase:
                  description: |-
                    INSERT ADDITIONAL STATUS FIELD - define observed state of cluster
                    Important: Run "make" to regenerate code after modifying this file
                  type: string
                pvcMatchLabels:
                  additionalProperties:
                    type: string
                  type: object
                reason:
                  type: string
                servicesName:
                  additionalProperties:
                    type: string
                  type: object
                strimziKafkaName:
                  type: string
                upgradeStatus:
                  description: UpgradeStatus indicates the status of the bundle upgrade.
                  properties:
                    crVersion:
                      description: CRVersion is the version of the CR
                      type: string
                  type: object
              required:
                - lastUpdateTime
                - phase
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: rdskafkausers.middleware.alauda.io
spec:
  group: middleware.alauda.io
  names:
    kind: RdsKafkaUser
    listKind: RdsKafkaUserList
    plural: rdskafkausers
    singular: rdskafkauser
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: RdsKafkaUser is the Schema for the rdskafkausers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RdsKafkaUserSpec defines the desired state of RdsKafkaUser
            properties:
              authentication:
                description: Authentication configuration for the Kafka user
                properties:
                  password:
                    description: Password secret reference
                    properties:
                      valueFrom:
                        description: Secret key ref for the password
                        properties:
                          secretKeyRef:
                            description: Secret key selector
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                        required:
                        - secretKeyRef
                        type: object
                    required:
                    - valueFrom
                    type: object
                  type:
                    enum:
                    - tls
                    - scram-sha-512
                    type: string
                required:
                - type
                type: object
              authorization:
                description: Authorization configuration controlling Kafka permissions
                properties:
                  acls:
                    description: Access control lists
                    items:
                      properties:
                        host:
                          description: Host is the host pattern that applies to the
                            ACL
                          type: string
                        operation:
                          description: Operation is one of the allowed Kafka operation
                            types
                          enum:
                          - Read
                          - Write
                          - Create
                          - Delete
                          - Alter
                          - Describe
                          - ClusterAction
                          - AlterConfigs
                          - DescribeConfigs
                          - IdempotentWrite
                          - All
                          type: string
                        resource:
                          description: Resource defines the type and name of the resource
                          properties:
                            name:
                              description: Name is the resource name
                              type: string
                            patternType:
                              description: PatternType is how the name should be interpreted
                              enum:
                              - literal
                              - prefix
                              type: string
                            type:
                              description: Type is the type of resource
                              enum:
                              - topic
                              - group
                              - cluster
                              - transactionalId
                              type: string
                          required:
                          - name
                          - patternType
                          - type
                          type: object
                      required:
                      - host
                      - operation
                      - resource
                      type: object
                    type: array
                  type:
                    enum:
                    - simple
                    type: string
                required:
                - acls
                - type
                type: object
            required:
            - authentication
            - authorization
            type: object
          status:
            description: RdsKafkaUserStatus defines the observed state of RdsKafkaUser
            properties:
              lastUpdateTime:
                format: date-time
                type: string
              phase:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file'
                type: string
              reason:
                type: string
              secret:
                type: string
              strimziKafkaUserName:
                type: string
              username:
                type: string
            required:
            - lastUpdateTime
            - phase
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
